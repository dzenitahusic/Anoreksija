(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    338837,       6487]
NotebookOptionsPosition[    333114,       6404]
NotebookOutlinePosition[    333511,       6420]
CellTagsIndexPosition[    333468,       6417]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Zdravljenje anoreksije\n",
 StyleBox["Podatki o spremembi te\[ZHacek]e pri mladih \[ZHacek]enskah, ki se \
zdravijo zaradi anoreksije", "Subtitle"]
}], "Title",
 CellChangeTimes->{{3.8332746289770193`*^9, 3.8332746342323203`*^9}, {
  3.8332747219743385`*^9, 
  3.833274722718381*^9}},ExpressionUUID->"2148a03e-7e65-4361-aebe-\
2ef7952e341f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki", " ", "=", " ", 
  RowBox[{
  "ResourceData", " ", "[", "\"\<Sample Data: Anorexia Treatment\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.833273524605853*^9, 3.8332736045954285`*^9}, {
  3.833273640131461*^9, 3.8332736447097225`*^9}, {3.833274229821189*^9, 
  3.833274230779244*^9}, {3.8332747369731965`*^9, 3.8332747413614473`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"7398d997-50b6-487e-a1b9-5ae516bafd91"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[80.7, "Pounds"], 
        "ExitWeight" -> Quantity[80.2, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[89.4, "Pounds"], 
        "ExitWeight" -> Quantity[80.1, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[91.8, "Pounds"], 
        "ExitWeight" -> Quantity[86.4, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[74, "Pounds"], 
        "ExitWeight" -> Quantity[86.3, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[78.1, "Pounds"], 
        "ExitWeight" -> Quantity[76.1, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[88.3, "Pounds"], 
        "ExitWeight" -> Quantity[78.1, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[87.3, "Pounds"], 
        "ExitWeight" -> Quantity[75.1, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[75.1, "Pounds"], 
        "ExitWeight" -> Quantity[86.7, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[80.6, "Pounds"], 
        "ExitWeight" -> Quantity[73.5, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[78.4, "Pounds"], 
        "ExitWeight" -> Quantity[84.6, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[77.6, "Pounds"], 
        "ExitWeight" -> Quantity[77.4, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[88.7, "Pounds"], 
        "ExitWeight" -> Quantity[79.5, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[81.3, "Pounds"], 
        "ExitWeight" -> Quantity[89.6, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[78.1, "Pounds"], 
        "ExitWeight" -> Quantity[81.4, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[70.5, "Pounds"], 
        "ExitWeight" -> Quantity[81.8, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[77.3, "Pounds"], 
        "ExitWeight" -> Quantity[77.3, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[85.2, "Pounds"], 
        "ExitWeight" -> Quantity[84.2, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[86, "Pounds"], 
        "ExitWeight" -> Quantity[75.4, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[84.1, "Pounds"], 
        "ExitWeight" -> Quantity[79.5, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[79.7, "Pounds"], 
        "ExitWeight" -> Quantity[73, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[85.5, "Pounds"], 
        "ExitWeight" -> Quantity[88.3, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[84.4, "Pounds"], 
        "ExitWeight" -> Quantity[84.7, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[79.6, "Pounds"], 
        "ExitWeight" -> Quantity[81.4, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[77.5, "Pounds"], 
        "ExitWeight" -> Quantity[81.2, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[72.3, "Pounds"], 
        "ExitWeight" -> Quantity[88.2, "Pounds"]], 
       Association[
       "Treatment" -> "Cont", "EntryWeight" -> Quantity[89, "Pounds"], 
        "ExitWeight" -> Quantity[78.8, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[80.5, "Pounds"], 
        "ExitWeight" -> Quantity[82.2, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[84.9, "Pounds"], 
        "ExitWeight" -> Quantity[85.6, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[81.5, "Pounds"], 
        "ExitWeight" -> Quantity[81.4, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[82.6, "Pounds"], 
        "ExitWeight" -> Quantity[81.9, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[79.9, "Pounds"], 
        "ExitWeight" -> Quantity[76.4, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[88.7, "Pounds"], 
        "ExitWeight" -> Quantity[103.6, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[94.9, "Pounds"], 
        "ExitWeight" -> Quantity[98.4, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[76.3, "Pounds"], 
        "ExitWeight" -> Quantity[93.4, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[81, "Pounds"], 
        "ExitWeight" -> Quantity[73.4, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[80.5, "Pounds"], 
        "ExitWeight" -> Quantity[82.1, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[85, "Pounds"], 
        "ExitWeight" -> Quantity[96.7, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[89.2, "Pounds"], 
        "ExitWeight" -> Quantity[95.3, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[81.3, "Pounds"], 
        "ExitWeight" -> Quantity[82.4, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[76.5, "Pounds"], 
        "ExitWeight" -> Quantity[72.5, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[70, "Pounds"], 
        "ExitWeight" -> Quantity[90.9, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[80.4, "Pounds"], 
        "ExitWeight" -> Quantity[71.3, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[83.3, "Pounds"], 
        "ExitWeight" -> Quantity[85.4, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[83, "Pounds"], 
        "ExitWeight" -> Quantity[81.6, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[87.7, "Pounds"], 
        "ExitWeight" -> Quantity[89.1, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[84.2, "Pounds"], 
        "ExitWeight" -> Quantity[83.9, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[86.4, "Pounds"], 
        "ExitWeight" -> Quantity[82.7, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[76.5, "Pounds"], 
        "ExitWeight" -> Quantity[75.7, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[80.2, "Pounds"], 
        "ExitWeight" -> Quantity[82.6, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[87.8, "Pounds"], 
        "ExitWeight" -> Quantity[100.4, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[83.3, "Pounds"], 
        "ExitWeight" -> Quantity[85.2, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[79.7, "Pounds"], 
        "ExitWeight" -> Quantity[83.6, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[84.5, "Pounds"], 
        "ExitWeight" -> Quantity[84.6, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[80.8, "Pounds"], 
        "ExitWeight" -> Quantity[96.2, "Pounds"]], 
       Association[
       "Treatment" -> "CBT", "EntryWeight" -> Quantity[87.4, "Pounds"], 
        "ExitWeight" -> Quantity[86.7, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[83.8, "Pounds"], 
        "ExitWeight" -> Quantity[95.2, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[83.3, "Pounds"], 
        "ExitWeight" -> Quantity[94.3, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[86, "Pounds"], 
        "ExitWeight" -> Quantity[91.5, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[82.5, "Pounds"], 
        "ExitWeight" -> Quantity[91.9, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[86.7, "Pounds"], 
        "ExitWeight" -> Quantity[100.3, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[79.6, "Pounds"], 
        "ExitWeight" -> Quantity[76.7, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[76.9, "Pounds"], 
        "ExitWeight" -> Quantity[76.8, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[94.2, "Pounds"], 
        "ExitWeight" -> Quantity[101.6, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[73.4, "Pounds"], 
        "ExitWeight" -> Quantity[94.9, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[80.5, "Pounds"], 
        "ExitWeight" -> Quantity[75.2, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[81.6, "Pounds"], 
        "ExitWeight" -> Quantity[77.8, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[82.1, "Pounds"], 
        "ExitWeight" -> Quantity[95.5, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[77.6, "Pounds"], 
        "ExitWeight" -> Quantity[90.7, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[83.5, "Pounds"], 
        "ExitWeight" -> Quantity[92.5, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[89.9, "Pounds"], 
        "ExitWeight" -> Quantity[93.8, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[86, "Pounds"], 
        "ExitWeight" -> Quantity[91.7, "Pounds"]], 
       Association[
       "Treatment" -> "FT", "EntryWeight" -> Quantity[87.3, "Pounds"], 
        "ExitWeight" -> Quantity[98, "Pounds"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Treatment"} -> 1, {All, "EntryWeight"} -> 
        1, {All, "ExitWeight"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Treatment" -> TypeSystem`PackageScope`AtomShape[36.], 
            "EntryWeight" -> TypeSystem`PackageScope`AtomShape[75], 
            "ExitWeight" -> TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Treatment", "EntryWeight", "ExitWeight"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["CBT", "Cont", "FT"]], 
         TypeSystem`Atom[
          Quantity[1, "Pounds"]], 
         TypeSystem`Atom[
          Quantity[1, "Pounds"]]}], 72], "Meta" -> 
     Association["Origin" -> HoldComplete[
         Query[All, {"EntryWeight" -> Interpreter[
             Restricted["StructuredQuantity", "Pound"]], "ExitWeight" -> 
           Interpreter[
             Restricted["StructuredQuantity", "Pound"]]}][
          Dataset`DatasetHandle[250504032116327]]], "ID" -> 157651134144104], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Treatment"} -> 1, {All, "EntryWeight"} -> 
        1, {All, "ExitWeight"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Treatment" -> TypeSystem`PackageScope`AtomShape[36.], 
            "EntryWeight" -> TypeSystem`PackageScope`AtomShape[75], 
            "ExitWeight" -> TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Treatment", "EntryWeight", "ExitWeight"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["CBT", "Cont", "FT"]], 
         TypeSystem`Atom[
          Quantity[1, "Pounds"]], 
         TypeSystem`Atom[
          Quantity[1, "Pounds"]]}], 72], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     72, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Treatment", 
                  Style[
                  "Treatment", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Treatment"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Treatment"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EntryWeight", 
                  Style[
                  "EntryWeight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "EntryWeight"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "EntryWeight"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ExitWeight", 
                  Style[
                  "ExitWeight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "ExitWeight"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ExitWeight"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"80.7`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"80.2`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"89.4`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"80.1`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"91.8`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"86.4`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"74", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"86.3`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"78.1`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"76.1`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"88.3`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"78.1`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"87.3`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"75.1`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"75.1`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"86.7`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"80.6`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"73.5`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"78.4`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"84.6`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"77.6`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"77.4`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"88.7`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"79.5`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"81.3`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"89.6`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"78.1`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"81.4`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"70.5`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"81.8`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"77.3`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"77.3`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"85.2`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"84.2`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"86", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"75.4`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"84.1`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"79.5`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Treatment"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"79.7`", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["EntryWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"73", "\"lb\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["ExitWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    72, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    72, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{279., {265.5, 272.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{279., {265.5, 272.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833353559288129*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"a04b1b67-1ec7-4cc1-bd55-e0f415f90c02"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8333345011303935`*^9, 3.833334504410398*^9}, {
  3.833376091605398*^9, 
  3.8333760920903993`*^9}},ExpressionUUID->"e8b42d0f-80de-4b1e-9191-\
4bfa7d00e409"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
   "Analiza", " ", "podatkov", " ", "o", " ", "anoreksij", " ", "glede", " ", 
    "na", " ", "dejavnike"}], "\[IndentingNewLine]"}], "Section"]], "Input",
 CellChangeTimes->{{3.833275087115224*^9, 3.833275091050449*^9}, 
   3.8332752124213905`*^9},ExpressionUUID->"f3d809f0-9c1d-4ac8-b476-\
a4640553dc1b"],

Cell["\<\
Analizirala ter napisala bom nekaj grafov o anoreksij gleda na \
razli\[CHacek]ne dejavnike. Primerjala bom katerih je najve\[CHacek]. \
Preverila bom kje pride do najve\[CHacek]je razlike v te\[ZHacek]i.
V spremenljivki treatment je shranjen dejavnik treh ravni ki je lahko : \
\[OpenCurlyDoubleQuote]Cont\[CloseCurlyDoubleQuote](nadzor), \
\[OpenCurlyDoubleQuote]CBT\[CloseCurlyDoubleQuote] (kognitivno vedenjsko \
zdravljenje) in \
\[OpenCurlyDoubleQuote]FT\[CloseCurlyDoubleQuote](dru\[ZHacek]insko \
zdravljenje).\
\>", "Text",
 CellChangeTimes->{{3.8332752235830293`*^9, 3.8332753579097123`*^9}, {
  3.833275447813854*^9, 3.833275482035812*^9}, {3.8332764233696527`*^9, 
  3.8332764256127815`*^9}},ExpressionUUID->"fcd7875d-1f93-487a-ba2e-\
f4c09b853a04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dejavnikCont", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Treatment\>\"", "]"}], " ", "\[Equal]", " ", 
       "\"\<CBT\>\""}], " ", "&"}]}], " ", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8332761983137803`*^9, 3.8332762684747934`*^9}, {
  3.833276544003553*^9, 3.8332765590224123`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"3679bd2a-f203-42a3-a070-539405659d74"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.833276278417362*^9, 3.833276560890519*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"277fc013-4acc-43c4-9333-6b555318d56d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dejavnikCBT", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Treatment\>\"", "]"}], " ", "\[Equal]", " ", 
       "\"\<Cont\>\""}], " ", "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.83327628694685*^9, 3.8332763436180916`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"6cbe46db-6092-40bc-b783-c3d503ff0e98"],

Cell[BoxData["26"], "Output",
 CellChangeTimes->{3.8332763470282865`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"bfba1f4a-f82d-4592-a170-d15fefb24c47"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"dejavnikFT", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Treatment\>\"", "]"}], " ", "\[Equal]", " ", 
       "\"\<FT\>\""}], " ", "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8332763505004854`*^9, 3.8332764019954305`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e6b86fbe-cd08-484b-8f26-bf73ed8af601"],

Cell[BoxData["17"], "Text", "Input",
 CellChangeTimes->{{3.833276429238989*^9, 
  3.833276475048609*^9}},ExpressionUUID->"5cda69b6-7490-4ad9-8402-\
8ef17260d2e5"],

Cell["\<\
Iz teh podatkov je razvidno da je najve\[CHacek] dejavnika Cont ravni, \
najmanj pa dejavnika FT.
Drugi stolpec nam poka\[ZHacek]e te\[ZHacek]o pacienta pred \
\[SHacek]tudijskim obdobjem v kg, tretji pa te\[ZHacek]o pacienta po \
\[SHacek]tudijskem obdobju v kg. \
\>", "Text",
 CellChangeTimes->{{3.833276535949092*^9, 3.8332765396763053`*^9}, {
   3.8332765754833536`*^9, 3.8332766160696745`*^9}, {3.8332766505646477`*^9, 
   3.833276724333867*^9}, 
   3.833277102585554*^9},ExpressionUUID->"5db49c31-8927-4e4c-80c9-\
0c5331082fb0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.8332765104286327`*^9},ExpressionUUID->"2d442651-17d5-413f-9318-\
215cafa10099"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833302719834543*^9, 
  3.83330272473955*^9}},ExpressionUUID->"143a0dfe-c0e2-400a-b9a8-\
6a7c5aa72f6e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833302118993702*^9, 
  3.8333021198337035`*^9}},ExpressionUUID->"a4f843d8-6095-47cd-a7ac-\
857dbdf375ac"],

Cell[CellGroupData[{

Cell["Razlika te\[ZHacek]e po zdravljenju\[LineSeparator]", "Section",
 CellChangeTimes->{{3.833353131867531*^9, 3.8333531768025937`*^9}, {
  3.8333567517828245`*^9, 
  3.833356755257829*^9}},ExpressionUUID->"3b8f35da-2d12-45cb-a141-\
f33e4fdd0517"],

Cell[BoxData[
 RowBox[{"tabela", "=", 
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\MIRSAD\\\\Desktop\\\\ROM\\\\razlikateze.xlsx\>\"", 
     ",", "\"\<Dataset\>\"", ",", 
     RowBox[{"\"\<HeaderLines\>\"", "\[Rule]", "1"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8333531812925997`*^9, 3.8333531858326063`*^9}, {
  3.833353282722742*^9, 3.833353301937769*^9}, {3.833353618293212*^9, 
  3.833353654908263*^9}, {3.8333542150890613`*^9, 3.833354218779066*^9}, {
  3.8333558293312654`*^9, 3.8333558676093493`*^9}, {3.8333559431445055`*^9, 
  3.83335594674951*^9}, {3.8333559862215667`*^9, 3.8333559898665714`*^9}, {
  3.8333560321537056`*^9, 3.833356069627763*^9}, {3.8333561808579783`*^9, 
  3.8333562450570726`*^9}, {3.8333567579128327`*^9, 
  3.8333567604678364`*^9}},ExpressionUUID->"de5163d4-532e-4732-963d-\
0b8ed63d478d"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association["InitialData" -> {
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 80.7, 
         "\"ExitWeight\"" -> 80.2, "razlika v te\[ZHacek]i" -> -0.5], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 89.4, 
         "\"ExitWeight\"" -> 80.1, 
         "razlika v te\[ZHacek]i" -> -9.300000000000011], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 91.8, 
         "\"ExitWeight\"" -> 86.4, 
         "razlika v te\[ZHacek]i" -> -5.3999999999999915`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 74., 
         "\"ExitWeight\"" -> 86.3, "razlika v te\[ZHacek]i" -> 
         12.299999999999997`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 78.1, 
         "\"ExitWeight\"" -> 76.1, "razlika v te\[ZHacek]i" -> -2.], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 88.3, 
         "\"ExitWeight\"" -> 78.1, 
         "razlika v te\[ZHacek]i" -> -10.200000000000003`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 87.3, 
         "\"ExitWeight\"" -> 75.1, 
         "razlika v te\[ZHacek]i" -> -12.200000000000003`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 75.1, 
         "\"ExitWeight\"" -> 86.7, "razlika v te\[ZHacek]i" -> 
         11.600000000000009`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 80.6, 
         "\"ExitWeight\"" -> 73.5, 
         "razlika v te\[ZHacek]i" -> -7.099999999999994], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 78.4, 
         "\"ExitWeight\"" -> 84.6, "razlika v te\[ZHacek]i" -> 
         6.199999999999989], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 77.6, 
         "\"ExitWeight\"" -> 77.4, 
         "razlika v te\[ZHacek]i" -> -0.19999999999998863`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 88.7, 
         "\"ExitWeight\"" -> 79.5, 
         "razlika v te\[ZHacek]i" -> -9.200000000000003], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 81.3, 
         "\"ExitWeight\"" -> 89.6, "razlika v te\[ZHacek]i" -> 
         8.299999999999997], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 78.1, 
         "\"ExitWeight\"" -> 81.4, "razlika v te\[ZHacek]i" -> 
         3.3000000000000114`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 70.5, 
         "\"ExitWeight\"" -> 81.8, "razlika v te\[ZHacek]i" -> 
         11.299999999999997`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 77.3, 
         "\"ExitWeight\"" -> 77.3, "razlika v te\[ZHacek]i" -> 0.], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 85.2, 
         "\"ExitWeight\"" -> 84.2, "razlika v te\[ZHacek]i" -> -1.], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 86., 
         "\"ExitWeight\"" -> 75.4, 
         "razlika v te\[ZHacek]i" -> -10.599999999999994`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 84.1, 
         "\"ExitWeight\"" -> 79.5, 
         "razlika v te\[ZHacek]i" -> -4.599999999999994], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 79.7, 
         "\"ExitWeight\"" -> 73., 
         "razlika v te\[ZHacek]i" -> -6.700000000000003], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 85.5, 
         "\"ExitWeight\"" -> 88.3, "razlika v te\[ZHacek]i" -> 
         2.799999999999997], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 84.4, 
         "\"ExitWeight\"" -> 84.7, "razlika v te\[ZHacek]i" -> 
         0.29999999999999716`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 79.6, 
         "\"ExitWeight\"" -> 81.4, "razlika v te\[ZHacek]i" -> 
         1.8000000000000114`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 77.5, 
         "\"ExitWeight\"" -> 81.2, "razlika v te\[ZHacek]i" -> 
         3.700000000000003], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 72.3, 
         "\"ExitWeight\"" -> 88.2, "razlika v te\[ZHacek]i" -> 
         15.900000000000006`], 
        Association[
        "\"Treatment\"" -> "\"Cont\"", "\"EntryWeight\"" -> 89., 
         "\"ExitWeight\"" -> 78.8, 
         "razlika v te\[ZHacek]i" -> -10.200000000000003`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 80.5, 
         "\"ExitWeight\"" -> 82.2, "razlika v te\[ZHacek]i" -> 
         1.7000000000000028`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 84.9, 
         "\"ExitWeight\"" -> 85.6, "razlika v te\[ZHacek]i" -> 
         0.6999999999999886], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 81.5, 
         "\"ExitWeight\"" -> 81.4, 
         "razlika v te\[ZHacek]i" -> -0.09999999999999432], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 82.6, 
         "\"ExitWeight\"" -> 81.9, 
         "razlika v te\[ZHacek]i" -> -0.6999999999999886], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 79.9, 
         "\"ExitWeight\"" -> 76.4, "razlika v te\[ZHacek]i" -> -3.5], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 88.7, 
         "\"ExitWeight\"" -> 103.6, "razlika v te\[ZHacek]i" -> 
         14.899999999999991`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 94.9, 
         "\"ExitWeight\"" -> 98.4, "razlika v te\[ZHacek]i" -> 3.5], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 76.3, 
         "\"ExitWeight\"" -> 93.4, "razlika v te\[ZHacek]i" -> 
         17.10000000000001], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 81., 
         "\"ExitWeight\"" -> 73.4, 
         "razlika v te\[ZHacek]i" -> -7.599999999999994], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 80.5, 
         "\"ExitWeight\"" -> 82.1, "razlika v te\[ZHacek]i" -> 
         1.5999999999999943`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 85., 
         "\"ExitWeight\"" -> 96.7, "razlika v te\[ZHacek]i" -> 
         11.700000000000003`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 89.2, 
         "\"ExitWeight\"" -> 95.3, "razlika v te\[ZHacek]i" -> 
         6.099999999999994], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 81.3, 
         "\"ExitWeight\"" -> 82.4, "razlika v te\[ZHacek]i" -> 
         1.1000000000000085`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 76.5, 
         "\"ExitWeight\"" -> 72.5, "razlika v te\[ZHacek]i" -> -4.], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 70., 
         "\"ExitWeight\"" -> 90.9, "razlika v te\[ZHacek]i" -> 
         20.900000000000006`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 80.4, 
         "\"ExitWeight\"" -> 71.3, 
         "razlika v te\[ZHacek]i" -> -9.100000000000009], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 83.3, 
         "\"ExitWeight\"" -> 85.4, "razlika v te\[ZHacek]i" -> 
         2.1000000000000085`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 83., 
         "\"ExitWeight\"" -> 81.6, 
         "razlika v te\[ZHacek]i" -> -1.4000000000000057`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 87.7, 
         "\"ExitWeight\"" -> 89.1, "razlika v te\[ZHacek]i" -> 
         1.3999999999999915`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 84.2, 
         "\"ExitWeight\"" -> 83.9, 
         "razlika v te\[ZHacek]i" -> -0.29999999999999716`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 86.4, 
         "\"ExitWeight\"" -> 82.7, 
         "razlika v te\[ZHacek]i" -> -3.700000000000003], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 76.5, 
         "\"ExitWeight\"" -> 75.7, 
         "razlika v te\[ZHacek]i" -> -0.7999999999999972], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 80.2, 
         "\"ExitWeight\"" -> 82.6, "razlika v te\[ZHacek]i" -> 
         2.3999999999999915`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 87.8, 
         "\"ExitWeight\"" -> 100.4, "razlika v te\[ZHacek]i" -> 
         12.600000000000009`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 83.3, 
         "\"ExitWeight\"" -> 85.2, "razlika v te\[ZHacek]i" -> 
         1.9000000000000057`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 79.7, 
         "\"ExitWeight\"" -> 83.6, "razlika v te\[ZHacek]i" -> 
         3.8999999999999915`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 84.5, 
         "\"ExitWeight\"" -> 84.6, "razlika v te\[ZHacek]i" -> 
         0.09999999999999432], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 80.8, 
         "\"ExitWeight\"" -> 96.2, "razlika v te\[ZHacek]i" -> 
         15.400000000000006`], 
        Association[
        "\"Treatment\"" -> "\"CBT\"", "\"EntryWeight\"" -> 87.4, 
         "\"ExitWeight\"" -> 86.7, 
         "razlika v te\[ZHacek]i" -> -0.7000000000000028], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 83.8, 
         "\"ExitWeight\"" -> 95.2, "razlika v te\[ZHacek]i" -> 
         11.400000000000006`], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 83.3, 
         "\"ExitWeight\"" -> 94.3, "razlika v te\[ZHacek]i" -> 11.], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 86., 
         "\"ExitWeight\"" -> 91.5, "razlika v te\[ZHacek]i" -> 5.5], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 82.5, 
         "\"ExitWeight\"" -> 91.9, "razlika v te\[ZHacek]i" -> 
         9.400000000000006], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 86.7, 
         "\"ExitWeight\"" -> 100.3, "razlika v te\[ZHacek]i" -> 
         13.599999999999994`], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 79.6, 
         "\"ExitWeight\"" -> 76.7, 
         "razlika v te\[ZHacek]i" -> -2.8999999999999915`], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 76.9, 
         "\"ExitWeight\"" -> 76.8, 
         "razlika v te\[ZHacek]i" -> -0.10000000000000853`], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 94.2, 
         "\"ExitWeight\"" -> 101.6, "razlika v te\[ZHacek]i" -> 
         7.3999999999999915`], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 73.4, 
         "\"ExitWeight\"" -> 94.9, "razlika v te\[ZHacek]i" -> 21.5], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 80.5, 
         "\"ExitWeight\"" -> 75.2, 
         "razlika v te\[ZHacek]i" -> -5.299999999999997], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 81.6, 
         "\"ExitWeight\"" -> 77.8, 
         "razlika v te\[ZHacek]i" -> -3.799999999999997], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 82.1, 
         "\"ExitWeight\"" -> 95.5, "razlika v te\[ZHacek]i" -> 
         13.400000000000006`], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 77.6, 
         "\"ExitWeight\"" -> 90.7, "razlika v te\[ZHacek]i" -> 
         13.100000000000009`], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 83.5, 
         "\"ExitWeight\"" -> 92.5, "razlika v te\[ZHacek]i" -> 9.], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 89.9, 
         "\"ExitWeight\"" -> 93.8, "razlika v te\[ZHacek]i" -> 
         3.8999999999999915`], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 86., 
         "\"ExitWeight\"" -> 91.7, "razlika v te\[ZHacek]i" -> 
         5.700000000000003], 
        Association[
        "\"Treatment\"" -> "\"FT\"", "\"EntryWeight\"" -> 87.3, 
         "\"ExitWeight\"" -> 98., "razlika v te\[ZHacek]i" -> 
         10.700000000000003`]}, "InitialShape" -> 
      TypeSystem`PackageScope`HeaderShape[
        Association[{All, "\"Treatment\""} -> 1, {All, "\"EntryWeight\""} -> 
         1, {All, "\"ExitWeight\""} -> 1, {All, "razlika v te\[ZHacek]i"} -> 
         1], 
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "\"Treatment\"" -> TypeSystem`PackageScope`AtomShape[54.], 
             "\"EntryWeight\"" -> TypeSystem`PackageScope`AtomShape[60], 
             "\"ExitWeight\"" -> TypeSystem`PackageScope`AtomShape[60], 
             "razlika v te\[ZHacek]i" -> 
             TypeSystem`PackageScope`AtomShape[60]]], 
           DirectedInfinity[1], 4, {All}]], 20, 
         DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
        TypeSystem`Struct[{
         "\"Treatment\"", "\"EntryWeight\"", "\"ExitWeight\"", 
          "razlika v te\[ZHacek]i"}, {
          TypeSystem`Atom[
           TypeSystem`Enumeration["\"CBT\"", "\"Cont\"", "\"FT\""]], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 72], "Meta" -> 
      Association["ID" -> 211351281509121], "RowTarget" -> 20, "ColumnTarget" -> 
      10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
        Association[{All, "\"Treatment\""} -> 1, {All, "\"EntryWeight\""} -> 
         1, {All, "\"ExitWeight\""} -> 1, {All, "razlika v te\[ZHacek]i"} -> 
         1], 
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "\"Treatment\"" -> TypeSystem`PackageScope`AtomShape[54.], 
             "\"EntryWeight\"" -> TypeSystem`PackageScope`AtomShape[60], 
             "\"ExitWeight\"" -> TypeSystem`PackageScope`AtomShape[60], 
             "razlika v te\[ZHacek]i" -> 
             TypeSystem`PackageScope`AtomShape[60]]], 
           DirectedInfinity[1], 4, {All}]], 20, 
         DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
        TypeSystem`Struct[{
         "\"Treatment\"", "\"EntryWeight\"", "\"ExitWeight\"", 
          "razlika v te\[ZHacek]i"}, {
          TypeSystem`Atom[
           TypeSystem`Enumeration["\"CBT\"", "\"Cont\"", "\"FT\""]], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 72], "Path" -> {}, "BaseIndices" -> {}, 
      "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
      72, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 23, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["\"Treatment\"", 
                   Style[
                   "\"Treatment\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"]][{
                   All, "\"Treatment\""}, 1]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{
                 All, "\"Treatment\""}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["\"EntryWeight\"", 
                   Style[
                   "\"EntryWeight\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"]][{
                   All, "\"EntryWeight\""}, 1]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{
                 All, "\"EntryWeight\""}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["\"ExitWeight\"", 
                   Style[
                   "\"ExitWeight\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"]][{
                   All, "\"ExitWeight\""}, 1]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{
                 All, "\"ExitWeight\""}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["razlika v te\[ZHacek]i", 
                   Style[
                   "razlika v te\[ZHacek]i", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"]][{
                   All, "razlika v te\[ZHacek]i"}, 1]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{
                 All, "razlika v te\[ZHacek]i"}, "ColumnHeader", True], 
                "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
             Item[
              Pane[
               Annotation["\"Cont\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{23, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["79.6"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{23, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["81.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{23, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.8"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{23, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"Cont\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{24, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["77.5"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{24, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["81.2"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{24, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{24, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"Cont\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{25, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["72.3"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{25, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["88.2"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{25, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["15.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{25, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"Cont\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{26, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["89.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{26, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["78.8"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{26, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["-10.2"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{26, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{27, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["80.5"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{27, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["82.2"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{27, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{27, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{28, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["84.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{28, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["85.6"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{28, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["0.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{28, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{29, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["81.5"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{29, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["81.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{29, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["-0.1"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{29, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{30, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["82.6"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{30, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["81.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{30, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["-0.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{30, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{31, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["79.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{31, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["76.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{31, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["-3.5"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{31, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{32, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["88.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{32, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["103.6"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{32, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["14.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{32, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{33, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["94.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{33, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["98.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{33, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.5"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{33, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{34, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["76.3"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{34, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["93.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{34, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["17.1"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{34, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{35, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["81.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{35, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["73.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{35, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["-7.6"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{35, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{36, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["80.5"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{36, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["82.1"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{36, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.6"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{36, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{37, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["85.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{37, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["96.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{37, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["11.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{37, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{38, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["89.2"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{38, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["95.3"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{38, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["6.1"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{38, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{39, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["81.3"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{39, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["82.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{39, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.1"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{39, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{40, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["76.5"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{40, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["72.5"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{40, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["-4.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{40, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{41, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["70.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{41, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["90.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{41, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["20.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{41, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["\"CBT\"", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{42, 
                  Key["\"Treatment\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{54., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["80.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{42, 
                  Key["\"EntryWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["71.3"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{42, 
                  Key["\"ExitWeight\""]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["-9.1"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][{42, 
                  Key["razlika v te\[ZHacek]i"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Deploy[
               Pane[
                Row[{
                  Spacer[2], 
                  Style[
                   Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 23, "\[Dash]", 42, " of ", 
                    Style[
                    72, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 23, "\[Dash]", 42, " of ", 
                    Style[
                    72, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                  Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                   ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                   Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
              Background -> 
              RGBColor[
               0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
              Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
             SpanFromLeft}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf", {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
             "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
           Left, Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373],
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
          LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
          ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               "cd64b4b5-47cb-413e-a7a4-cf2da5a54fcf"][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          If[GeneralUtilities`$DebugMode, 
           Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
             TypeSystem`NestedGrid`PackagePrivate`formatState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{418., {266.5, 271.5}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{418., {266.5, 271.5}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
       Needs["Dataset`"]; 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], " "}]], "Text", "Input",
 CellChangeTimes->{{3.8333563243172255`*^9, 3.833356352997266*^9}, {
  3.8333575252099094`*^9, 
  3.8333575385399284`*^9}},ExpressionUUID->"4e677052-c8da-4fe7-90c7-\
047467c5d3c0"],

Cell["\<\
Tukaj lahko vidimo novi stolpec razlika v te\[ZHacek]i, ki prikazuje po koncu \
zdravljenja te\[ZHacek]o v kilogramih. Vsi negativni rezultati pomenijo zmanj\
\[SHacek]anje kilogramov.
\
\>", "Text",
 CellChangeTimes->{{3.833356356342271*^9, 3.833356458587414*^9}, 
   3.8333567441828136`*^9},ExpressionUUID->"cf18ac82-143c-4d0d-adab-\
2fb6229206d2"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Graf", " ", "za", " ", "spremembo", " ", "te\[ZHacek]e"}], 
  "Section"]], "Input",
 CellChangeTimes->{{3.833375601414712*^9, 
  3.833375612239727*^9}},ExpressionUUID->"f02a22c5-ce06-4447-958f-\
dbc3378fb9f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3V1w1fWdx3F392Yv936verVXe7cXOzvT2YfZmZ3OzuyMGh+qtdYHcmJC
SgI2WE1aZwULFlHoSlkU0Aq4UKiUuiL4NCCoHabWLp2sUjO6+AgooZjIQCDd
P5xKY56gwO+b88vv9Zr3dMrJOfHg/Pvj05OT8KWbZ13R/KeXXXbZnD+v/uOK
m+b+4+zZN337yr+ofnHVN+fcVvvmjFu/8s3bZ9RmzP7bm/+suvGFP7nsster
+5/+7wAAqf0OAKAhNTc3T/VTAACmOXsDAEjN3gAAUrM3AIDU7A0AIDV7AwBI
zd4AAFKzNwCA1OwNACA1ewMASK35jKl+FgDAdGZsAACp2RsAQGr2BgCQmr0B
AKRmbwAAqdkbAEBq9gYAkJq9AQCkZm8AAKnZGwBAavYGAJCavQEQ6Yorrrj8
y38pBVRdbFN9vf+BvQEQqfojYOiFK6WA7A2AYtkbCsveACiWvaGw7A2AYtkb
CsveACiWvaGw7A2AYtkbCsveACiWvaGw7A2AYtkbCsveACiWvaGw7A2AYtkb
CsveACiWvaGw7A2AYtkbCsveACiWvaGwGm1vmBwAYewNhdVoe2OqnwJAQewN
hWVvABTL3lBY9gZAsewNhWVvABTL3lBY9gZAsewNhWVvABTL3lBY9gZAsewN
hWVvABTL3lBY9gZAsewNhWVvABTL3lBY9gZAsewNhWVvABTL3lBY9gZAsewN
hWVvABTL3lBY9gZAsewNhWVvABTL3lBY9gZAsewNhWVvABTL3lBY9gZAsewN
hWVvABTL3lBY9gZAsewNhWVvABTL3lBY9gZAsewNhWVvABTL3lBY9gZAsewN
hdVoe8PkAAhjbyisRtsbU/0UAApibygsewOgWPaGwrI3AIplbygsewOgWPaG
wrI3AIplbygsewOgWPaGwrI3AIplbygsewOgWPaGwrI3AIplbygsewOgWPaG
wrI3AIplbygsewOgWPaGwrI3AIplbygsewOgWPaGwrI3AIplbygsewOgWPaG
wrI3AIplbyis1HvjzTffXLJkSUdHR2tr6z333PPqq69Ocmd7AyCSvaGwku6N
Xbt21Wq15i/asWPHRPe3NwAi2RsKK93eOHjwYFtbW2tr67PPPjtwxgsvvNDS
0lLdODg4OO5D7A2ASPaGwkq3NzZs2FDth127do28ce3atdWNr7322rgPsTcA
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
FZa9oSyyNyAFx7jCsjeURfYGpOAYV1j2hrLI3oAUHOMKy95QFtkbkIJjXGHZ
G8oiewNScIwrLHtDWWRvQAqOcYVlbyiL7A1IwTGusOwNZZG9ASk4xhWWvaEs
sjcgBce4wrI3lEX2BqTgGFdY9oayyN6AFBzjCsveUBbZG5CCY1xh2RvKInsD
UnCMKyx7Q1lkb0AKjnGFZW8oi+wNSMExrrDsDWVRo+0Nk4PpwTGusOwNZVGj
7Y2pfgpwaTjGFZa9oSyyNyAFx7jCsjeURfYGpOAYV1j2hrLI3oAUHOMKy95Q
FtkbkIJjXGHZG8oiewNScIwrLHtDWWRvQAqOcYVlbyiL7A1IwTGusOwNZZG9
ASk4xhWWvaEssjcgBce4wrI3lEX2BqTgGFdY9oayyN6AFBzjCsveUBbZG5CC
Y1xh2RvKInsDUnCMKyx7Q1lkb0AKjnGFZW8oi+wNSMExrrDsDWWRvQEpOMYV
lr2hLEq6N44ePbp+/fru7u7W1tb29vaFCxfu2bNnkvvbG0wbjnGFZW8oi9Lt
jcOHD8+dO7d5jCeffHKih9gbTBuOcYVlbyiL0u2NVatWVfvhgQceePvtt48f
P97f3/+zn/2sdsa777477kPsDaYNx7jCsjeURen2RmdnZ2tra7U0Rt74+OOP
V6Ni69at4z7E3mDacIwrLHtDWRT8ftGdO3dWo+KnP/3puB+1N5g2HOMKy95Q
FgXvjZUrV1aj4vXXXx/3o/YG04ZjXGHZG8qiyL3xxhtv1Gq1np6eU6dOjXsH
e4NpwzGusOwNZVHY3ujr65s1a1ZbW9s777wz0X3sDaYNx7jCsjeURTF747XX
XquWRnt7e29v7yR3G/ltswHPCtJxjCsse0NZFLA3nnrqqVqt1tXVNckrG3Vm
BtOGY1xh2RvKoqR74+TJk4888ki1IhYuXHjkyJFz3t/eYNpwjCsse0NZlG5v
DA8P//CHP6wmxKOPPjo0NHQ+D7E3mDYc4wrL3lAWpdsbTz/9dLUfVq9eff4P
sTeYNhzjCsveUBYl2huDg4Pt7e1j//KUunXr1o37KHuDacMxrrDsDWVRor3x
y1/+cqKxYW9QAse4wrI3lEXBP190cvYG04ZjXGHZG8oiewNScIwrLHtDWWRv
QAqOcYVlbyiL7A1IwTGusOwNZZG9ASk4xhWWvaEssjcgBce4wrI3lEX2BqTg
GFdY9oayyN6AFBzjCsveUBbZG5CCY1xh2RvKInsDUnCMKyx7Q1lkb0AKjnGF
ZW8oi+wNSMExrrDsDWWRvQEpOMYVlr2hLLI3IAXHuMKyN5RF9gak4BhXWPaG
ssjegBQc4wrL3lAW2RuQgmNcYdkbyiJ7A1JwjCsse0NZ1Gh7w+RgenCMKyx7
Q1nUaHtjqp8CXBqOcYVlbyiL7A1IwTGusOwNZZG9ASk4xhWWvaEssjcgBce4
wrI3lEX2BqTgGFdY9oayyN6AFBzjCsveUBbZG5CCY1xh2RvKInsDUnCMKyx7
Q1lkb0AKjnGFZW8oi+wNSMExrrDsDWWRvQEpOMYVlr2hLLI3IAXHuMKyN5RF
9gak4BhXWPaGssjegBQc4wrL3lAW2RuQgmNcYdkbyiJ7A1JwjCsse0NZZG9A
Co5xhWVvKIvsDUjBMa6w7A1lkb0BKTjGFZa9oSyyNyAFx7jCsjeURfYGpOAY
V1j2hrLI3oAUHOMKy95QFtkbkIJjXGHZG8oiewNScIwrLHtDWWRvQAqOcYVl
byiLGm1vmBxMD45xhWVvKIsabW9M9VOAS8MxrrDsDWWRvQEpOMYVlr2hLLI3
IAXHuMKyN5RF9gak4BhXWPaGssjegBQc4wrL3lAW2RuQgmNcYdkbyiJ7A1Jw
jCsse0NZZG9ACo5xhWVvKIvsDUjBMa6w7A1lkb0BKTjGFZa9oSyyNyAFx7jC
sjeURfYGpOAYV1j2hrLI3oAUHOMKy95QFtkbkIJjXGHZG8oiewNScIwrLHtD
WWRvQAqOcYVlbyiL7A1IwTGusOwNZZG9ASk4xhWWvaEssjcgBce4wrI3lEX2
BqTgGFdY9oayyN6AFBzjCsveUBbZG5CCY1xh2RvKInsDUnCMKyx7Q1lkb0AK
jnGFZW8oi+wNSMExrrDsDWVRo+0Nk4PpwTGusOwNZVGj7Y2pfgpwaTjGFZa9
oSyyNyAFx7jCsjeURfYGpOAYV1j2hrLI3oAUHOMKy95QFtkbkIJjXGHZG8oi
ewNScIwrLHtDWWRvQAqOcYVlbyiL7A1IwTGusOwNZZG9ASk4xhWWvaEssjcg
Bce4wrI3lEX2BqTgGFdY9oayyN6AFBzjCsveUBbZG5CCY1xh2RvKInsDUnCM
Kyx7Q1lkb0AKjnGFZW8oi+wNSMExrrDsDWWRvQEpOMYVlr2hLEq9N3bv3j1v
3rz29vbZs2evWLHi4MGDk9zZ3mDacIwrLHtDWZR0b2zatKn5izo6Oj788MOJ
7m9vMG04xhWWvaEsSrc39u/fX+2HmTNn7t69e3Bw8NChQw899FB1y/333z/R
Q+wNpg3HuMKyN5RF6fbGj370o2o/PP/882dvOXnyZHd3d3XjgQMHxn2IvcG0
4RhXWPaGsijd3ujp6anVagMDAyNv3Lx5czUqduzYMe5D7A2mDce4wrI3lEWJ
9sapU6eqsdHV1TXq9j179lSjYv369eM+yt5g2nCMKyx7Q1mUaG8MDg5W42He
vHmjbn/jjTeq21evXj3uo+wNpg3HuMKyN5RFifbG4cOHq/GwYMGCUbe/9dZb
1e0rVqwY91HnuTeugCgX/D+B6rHVnwJSTC5UNX4Xc6JO4ujRo9V4mD9//qjb
669vPPbYY+M+qhkAKN75742hoaFarXbHHXeMur3+/o0NGzZMtDfO55NXd5vy
14VUQtUg/6Mu+wu7nuHiuVBpfOmutO7u7mpyfPbZZyNvrH9/yq5duy7mydgb
isneIBcuVBpfuiut/vM3Rn7r69mfv/HRRx9dzJOxNxSTvUEuXKg0vnRXWl9f
X/OZny/6yiuvnDhx4uOPP162bFl1ywMPPHCRT8beUEz2BrlwodL4kl5p69at
G/UOkM7Ozole3Dj/J2NvKCZ7g1y4UGl8Sa+04eHhF1988e67725tbf3Wt771
8MMPT/STzP+oJ2NvKCZ7g1y4UGl8DXWl2RtqqOwNcuFCpfE11JVmb6ihsjfI
hQuVxtdQV5q9cT4deOqqzUtvuGfuzZ3tM1pbZtw5+5bH7/v6h1uuTvHPeucn
V7+8+rop/y1PVZdfxI9tpPLJJ59s2bJl3rx5nZ2dra2td91119q1aw8ePHj2
Dlu3bh31Fq/qbl1dXcuXL3/77bfP3q36JOf86UAT/S2Q8Ef59a9/PcllVl3D
v3NBXih7I692PHLdzNtmjL22226bsXfdtZf2n7Xvx9e01JqfWPT1Kf9dT1X2
xsXYtWvXzJkzx7lW29p6e3vr9xm7N85qaWk5ezfHO2HsjXSa7Y18emnldfUr
+ZF7b3xzwzVHtjZ9ur2pWgUP/fs3qhtnts74v59cylc5frX22urT2htcgJdf
frl+ra5ateqtt94aGBg4duxYX19f/Zvi29vb33vvvd99vjc2bdpUf9Tw8PCJ
EycOHDiwZs2a6vaenp5xP/n69eurjz733HNxvx+KUd8bS5YsOf+HuCDPk72R
S588fVW1KE7P5odHf4HjxAtXrrz3xupDy+d94xL+E+0Ne+PC/Pa3v60WRXXx
vPTSS6M+VC2KaoE0f/6XNo7aGyPv1tXVVX2ov79/7Od3vJOOvZFOjnuj+lNg
yv8kiu+ZZV+r/v0s/s5N43708NNXfb/7po0P3HDi81sGtzdtXnrDd26/pbWl
eVbbjPt7bvrlmq+OfMijC05PlINPXbVu0dfndtxa3e3bnbduevCGz55tqj66
6ns3jnxt8Ln/vH7K/w3EZ29cmO3btzdP/JP9qjWyaNGiamNUo2KSvTF37txa
rXbs2LGxn8HxTjr2RiHsjUla1H1T9e9n96rzevfmka1N3/3WLWO/pLh5yQ1n
71PfG91zRt9t+T2nXySxN4bsjQt1//33V9fMK6+8cs57jt0bJ0+ePHDgwNq1
a8++BjKW45107I1C2BuTdOfs08Ng/5Pn9Q6N+pdXqi3x+pqvHt3W9NHPrqqW
Rkvt9HL43/W/f1tpfW9UNz71H1/7+L+vGtje9Ozy66u7VPVvvWrI11PsjQt1
1113VVfO+++/f857TvJ+0aVLl4762x7PcryTziTvF124cOG4D3FB5sjemKTO
mTPqX/445z0Htze1tpz+jpUPvvhNspsevKH6DA/Pv7H+y/reGDUnvn/mVZS+
jdcM2Rv2xoXq7OysrpzDhw+f856T7I358+fv27dv3Ec53knH3iiEvTFJPWe+
8PH2pmvOec99P76muuf9PaPf6fH+T6+ubv/O7bfUf1nfG689/oU3ddS/jPLm
BnvjdPbGhenp6Tn9Wtz+/ee859ivpwwNDVVDZceOHe3t7a2trSN/CsdZjnfS
8fWUQtgbk7T07tPf9PrSygnfv1Eth76N1xx//sr/ObMTVt5746g7DD7bVN1+
R8et9V/W98Yb678wYEbeaG/YGxfmBz/4QXXl7N69e6I7/OpXv3rnnXdOnTo1
0ftFKy+++GL1oWXLlo39kOOddOyNQtgbk/TCiuurfz+Lx7xqUe/IM01tZ34O
2Lubr963YfzXN97bfPr1jXvm3lz/pb1xzuyNC7Njx47mib8/ZWBgoK2trbrD
Bx98MMneqAZJ9aHu7u6xH3K8k469UQh7Y5KObG2adeYtHC8+PPpbRU48f+Xy
eadf/Vhw5+ktMbC9qaU2zvs3Nj5w+v0bq773hfdv2BuTZG9cmGpRdHR0VBfP
zp07R31oeHh4xYoVZ78UPsneqI+WBQsWjP2Q45107I1C2BuTV3+Jo74Z9m24
5tPtTf1bm/auu7b+Js9qY/zmx78fDw/P/8P3p3y6renAiO9P6f2vL3x/yiR7
Y+8Tp/fGg9+96dhzTVP+e5+S7I0LVl8LldWrV/f19R07duzTTz/t7e1dtGhR
85mfVV5/Y8bYvVENkmquvPTSS/XXQLZt2zb2kzveScfeKMT5741iu/7yvx/3
jdMzbr3l2n/9m7N3u/IfvnTLN64fe7evXfFPZ+/z9au/Ut1y9b/89cjPP/LG
pn/+q88/+4zr/u3vpvz3PiWlvuansaeffrpWq429CGfOnPmLX/yifp9Jvj+l
cu+99544cWLsZ3a8k469UYjz3BuF279//5o1a+6+++6Ojo7W1tbu7u4nnnji
0KFDo+722WefPfnkkz09PdV9Ojs7ly5dWv3vaOQdHnvssepf+G9+85tJbtyy
ZcucOXOq/6c57iveMLlzXqtj90Y1Uao7L1iwYNu2bcePHx/30zreScfeKIS9
AQCkZm8AAKnVX1Cd6mcBAExnxgYAkJq9AQCkZm8AAKnZGwBAavYGAJCavQEA
pGZvAACp2RsAQGr2BgCQmr0BAKRmbwAAqdkbAEBq9gYAkJq9AQCkZm8AAKnZ
GwBAavYGAJCavQEAAAAAAJTj/wEWPvhH
      "], {{0, 446.}, {720., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->72],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{389., Automatic},
    ImageSizeRaw->{720., 446.},
    PlotRange->{{0, 720.}, {0, 446.}}], " ", 
   StyleBox[
    RowBox[{
    "Sprememba", " ", "te\[ZHacek]e", " ", "za", " ", "zdravljenje", " ", 
     "Cont"}], "Text"]}], 
  StyleBox[",", "Text"], 
  StyleBox[" ", "Text"], 
  StyleBox["CBT", "Text"], 
  StyleBox[",", "Text"], 
  StyleBox[" ", "Text"], 
  StyleBox[
   RowBox[{"FT", "."}], "Text"]}]], "Input",
 CellChangeTimes->{{3.8333574472167997`*^9, 
  3.8333574922168627`*^9}},ExpressionUUID->"d6e9b393-1629-4e03-b077-\
7ea5e01d5996"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833299828107424*^9, 3.833299876242491*^9}, {
  3.833300579085518*^9, 3.833300604870554*^9}},
 FormatType->
  "InputForm",ExpressionUUID->"ab69309b-7262-40c3-8698-c20e6c56e8c1"],

Cell["", "Text",
 CellChangeTimes->{{3.8332819572424445`*^9, 3.833281978257474*^9}, {
  3.8332998808624973`*^9, 
  3.833299972737626*^9}},ExpressionUUID->"9edf7490-3eaf-4761-92dc-\
4f0dea1ab6cb"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"tabela", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\MIRSAD\\\\Desktop\\\\ROM\\\\CONT.xlsx\>\"", ",", 
      "\"\<Dataset\>\"", ",", 
      RowBox[{"\"\<HeaderLines\>\"", "\[Rule]", "1"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8333583380562754`*^9, 3.8333583424325256`*^9}, 
   3.8333585302702694`*^9, {3.833358635061263*^9, 3.8333586578685675`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"a7cd8d24-8885-45f7-8a75-263e06e47d49"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association["InitialData" -> {
        Association[
        "dejavnik" -> "CONT", "skupni kg na za\[CHacek]etku" -> 2120.3, 
         "skupni kg na koncu" -> 2110.8, "razlika" -> -11.7], 
        Association[
        "dejavnik" -> "CBT", "skupni kg na za\[CHacek]etku" -> 2398., 
         "skupni kg na koncu" -> 2485.2, "razlika" -> 87.2], 
        Association[
        "dejavnik" -> "FT", "skupni kg na za\[CHacek]etku" -> 1414.9, 
         "skupni kg na koncu" -> 1538.4, "razlika" -> 123.5]}, "InitialShape" -> 
      TypeSystem`PackageScope`HeaderShape[
        Association[{All, "dejavnik"} -> 
         1, {All, "skupni kg na za\[CHacek]etku"} -> 
         1, {All, "skupni kg na koncu"} -> 1, {All, "razlika"} -> 1], 
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "dejavnik" -> 
             TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
             "skupni kg na za\[CHacek]etku" -> 
             TypeSystem`PackageScope`AtomShape[60], "skupni kg na koncu" -> 
             TypeSystem`PackageScope`AtomShape[60], "razlika" -> 
             TypeSystem`PackageScope`AtomShape[60]]], 
           DirectedInfinity[1], 4, {All}]], 3, 
         DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
        TypeSystem`Struct[{
         "dejavnik", "skupni kg na za\[CHacek]etku", "skupni kg na koncu", 
          "razlika"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 3], "Meta" -> 
      Association["ID" -> 64768342666763], "RowTarget" -> 20, "ColumnTarget" -> 
      10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
        Association[{All, "dejavnik"} -> 
         1, {All, "skupni kg na za\[CHacek]etku"} -> 
         1, {All, "skupni kg na koncu"} -> 1, {All, "razlika"} -> 1], 
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "dejavnik" -> 
             TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
             "skupni kg na za\[CHacek]etku" -> 
             TypeSystem`PackageScope`AtomShape[60], "skupni kg na koncu" -> 
             TypeSystem`PackageScope`AtomShape[60], "razlika" -> 
             TypeSystem`PackageScope`AtomShape[60]]], 
           DirectedInfinity[1], 4, {All}]], 3, 
         DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
        TypeSystem`Struct[{
         "dejavnik", "skupni kg na za\[CHacek]etku", "skupni kg na koncu", 
          "razlika"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
      "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
      3, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["dejavnik", 
                   Style[
                   "dejavnik", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "9342988e-ef4c-45d3-b870-bc3ddb365b81"]][{All, "dejavnik"},
                    1]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{All, "dejavnik"}, 
                 "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["skupni kg na za\[CHacek]etku", 
                   Style[
                   "skupni kg na za\[CHacek]etku", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "9342988e-ef4c-45d3-b870-bc3ddb365b81"]][{
                   All, "skupni kg na za\[CHacek]etku"}, 1]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{
                 All, "skupni kg na za\[CHacek]etku"}, "ColumnHeader", True], 
                "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["skupni kg na koncu", 
                   Style[
                   "skupni kg na koncu", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "9342988e-ef4c-45d3-b870-bc3ddb365b81"]][{
                   All, "skupni kg na koncu"}, 1]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{
                 All, "skupni kg na koncu"}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["razlika", 
                   Style[
                   "razlika", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "9342988e-ef4c-45d3-b870-bc3ddb365b81"]][{All, "razlika"}, 
                   1]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{All, "razlika"}, 
                 "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
             Item[
              Pane[
               Annotation["CONT", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{1, 
                  Key["dejavnik"]}, "Item", False], "Mouse"], 
               ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2120.3"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{1, 
                  Key["skupni kg na za\[CHacek]etku"]}, "Item", False], 
                "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2110.8"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{1, 
                  Key["skupni kg na koncu"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["-11.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{1, 
                  Key["razlika"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["CBT", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{2, 
                  Key["dejavnik"]}, "Item", False], "Mouse"], 
               ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2398.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{2, 
                  Key["skupni kg na za\[CHacek]etku"]}, "Item", False], 
                "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2485.2"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{2, 
                  Key["skupni kg na koncu"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["87.2"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{2, 
                  Key["razlika"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["FT", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{3, 
                  Key["dejavnik"]}, "Item", False], "Mouse"], 
               ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1414.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{3, 
                  Key["skupni kg na za\[CHacek]etku"]}, "Item", False], 
                "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1538.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{3, 
                  Key["skupni kg na koncu"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["123.5"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9342988e-ef4c-45d3-b870-bc3ddb365b81"][{3, 
                  Key["razlika"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 "9342988e-ef4c-45d3-b870-bc3ddb365b81", {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "9342988e-ef4c-45d3-b870-bc3ddb365b81"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "9342988e-ef4c-45d3-b870-bc3ddb365b81"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "9342988e-ef4c-45d3-b870-bc3ddb365b81"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "9342988e-ef4c-45d3-b870-bc3ddb365b81"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "9342988e-ef4c-45d3-b870-bc3ddb365b81"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
             "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
           Left, Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373],
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
          LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
          ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               "9342988e-ef4c-45d3-b870-bc3ddb365b81"][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          If[GeneralUtilities`$DebugMode, 
           Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
             TypeSystem`NestedGrid`PackagePrivate`formatState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{434., {61.5, 66.5}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{434., {61.5, 66.5}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
       Needs["Dataset`"]; 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "\[IndentingNewLine]", 
  StyleBox["\[IndentingNewLine]", "Section"]}]], "Input",
 CellChangeTimes->{{3.833359275314883*^9, 3.8333592753598857`*^9}, {
   3.833375267004244*^9, 3.8333752719592505`*^9}, 3.833375579764682*^9, {
   3.8333757688249464`*^9, 3.833375846445055*^9}, {3.833375886100111*^9, 
   3.8333758972701263`*^9}, 3.8333761186054363`*^9, {3.833376515295992*^9, 
   3.833376618806136*^9}, {3.8333767088662624`*^9, 3.8333767267212877`*^9}, {
   3.8333773008952074`*^9, 3.8333773768303137`*^9}, 3.8333774567254257`*^9, {
   3.833381195275961*^9, 
   3.8333812134859867`*^9}},ExpressionUUID->"99d60779-40f9-4f47-894a-\
d53a42b82e3a"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833381240951025*^9, 
  3.833381262771055*^9}},ExpressionUUID->"270cf339-685d-473b-96c1-\
7ef78df14efa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Sprejem v bolni\[SHacek]nico, ki vklju\[CHacek]uje diagnozo anorexia nervosa \
v Angliji v letih 2019/20, po starosti\
\>", "Section",
 CellChangeTimes->{{3.8333774851204653`*^9, 
  3.8333774988754845`*^9}},ExpressionUUID->"2698c620-ca99-4369-b7e7-\
909da9cef773"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvdu33MZ975mZeZmHeZg1/8G8zZ8wr/M4T17rzJpHPZyzJoojJqZlyZLi
+LJNHylmJNuxrGM6TGQfRY5jK3EkmnHom6RIkSXrshmJulAXalM3SjJF7kvf
APR1vqgfULsa6O6N3Q1UV9X+flex1yYaKODbKPzwQVWh6n//L8f/043/4x/8
wR/c8j/j4z/959v/r8997j//2f/zv+I//+9nbvnjP/rMH/5///dnbv3DP/rD
z/2f/+V/wsLu//AHf/C/4I/07wlFURRFUVSTGk9pkqVJlsrrjIoaSxoOR2Ya
DIaDwShNwzlJvh0MCxvqDPUOhkrmvkbj8SJLFEVRFEVRK2sGI1UFpBl0VIai
/mA4M5WRaR4pDXPt73E0WudPRlEURVFU6FpQiVReoQxIU7VGB0HR4mTA0tAk
JfWHQUmqEomMRFEURVFUo1oKkIp0VAaepD84VJqBTDkpGciU/UFGoiiKoiiq
Uc1rZSuvMA+Q+v0MaeKkX0pJ5VTcNiOl/jDv1yR0lO1X/Y+MRFEURVFUU6pY
iTQTkPqq8ifpD6BR3cSCDJGt1C8l6T4Ek8aCSQNVo1TvHimKoiiKokSLK5EW
A9Igb1AbNMkqyDxriUtJbKg6dY+HozEZiaIoiqKo5rTgXbYqgBSrKqSmDxK7
iOIkxyT17lvKSCMyEkVRFEVRDemwlUjm+2uAFjCSBVDBLsBIWQ+l/lAPLEBG
oiiKoiiqCS1oaDsQkKSVrRfFdg61iz0lfdU3Ke0iLgeAg7Gzd4qiKIqijpQO
U4lktLLlwx8BWmwyUtbcBkZKU/aam529UxRFURR1pHQgI82qRBrpSiQwUrfX
s3OonW5XNbcNkv6wnzbzDeU1Nzt7pyiKoijqSKn8yv/08mIlkm5lyxkpsctI
sTBSMkiTvOZmZ+8URVEURR0pHboSyZhkJOmn40N2upYYqd0RRurvMxLrkSiK
oiiKakCVG9pmVCIJI0WxVUbqRfuMFMvEJf3Ghx2gKIqiKOqoqcxIheULKpH6
6fDXSzJSkgw++PhautfDyGCkwT4jsR6JoiiKoqi6tbgz0syGNmO22XTgazBS
u3NoRnr/o0+efP6V1iE3bLWFkQaakWSOksPunaIoiqIoarFWaGgbLM1IcdJ/
7sKbjz1z4c3LVw5VlWQyUtzvCyMlbGujKIqiKKpuVRs6cm4lkhoc6dCM9P5H
nwCQkJ564dV2N6q+IRip24ujuA9M0oyEYzjU3imKoiiKohZrXoftQzNSu7t4
R6PxeGevAzR6Y+uD5y68+cSzLwsjCSb9x2tvv/XOhx9/stPtHcBLrVaHjERR
FEVRVNM6VIftmQ1tFRkJm194/R3NRTPT47+7AIhanE+BkZI0kZEoiqIoiqpZ
ixmp0GFbj62tK5FUZ6R+lDLSwW1tg+HwwuuXVwGkScpI3V4v7kUpI0UJGYmi
KIqiqEZUjZHGixkJ0FKFkSaqNumVN2bUJlUEpIlipG43IiNRFEVRFNWoKjLS
vM5Ih2UkqN2Nnnrh1QIjvXhxq+K8tGQkiqIoiqIsaIqR5r/4XyMjXd9tleuR
fvfiG0lS6f19MhJFURRFURZUGyNVfvf/vfyt/8efvfDUC6/J3//+fNURANJ3
/8lIFEVRFEU1rGUZabA0I73+9gego4uX3osU2Oy2us9feAuYdG2nVWXzWYzU
JyNRFEVRFFWvLDMS8vzw99vdKC4sv7bd2t5tV8nBd0Y6ffr0jUpnz54tf7uz
s3PHHXfgW3zi7wULt7a2jh8/joUnT56MokMMwklRFEVRVBXZb2tbUV63tW0q
TRThbGxsaOARAXUAPLICCAo0NW8hNsTmyGSioGsmblEURVEUtYrqYqRW64Ax
JOvS3l7HX0bSAvMI7ZgywUlT0MyF2FxXH83ELYqiKIqiVtSK7/7LINuAFpuM
1On0ur0kHbvSQ0aStraZDWQm+eDz3nvvLeCQXqgrlCYKnLDCYRlJKqb4yU9+
8pOf/OTnvM8XXngBLKQ+8ffmOF9+4BiS0gtovYzUi5M4SfxiJBF+ZLNzkV5o
jZEsaDgc9q0IO6IdN+3Y8UI7LtvhheOsF9qpomRf/URVy4idBXORSBObyUiq
re2A/kjjymmx9vbS/kgmI+EYojip6Te2JE075sLA2toYG2nH69hIOx55CcwO
S5o7dhYzUqG5rd8fqBqkjJEEk8AqIJZyPdKhyKf6hmk9Ujedr021tXnGSK+9
9ppwESDn+PHjBUYKrM82YyPteB0baccjL4HZYUlzx06ZkQZzGGkwGA6yVraB
TmnH6ZyRVJ+mZaBosaaQaTw2GCntsy11Wb4wkgCPvPsv2FNQSO/+MzbSjtex
kXY88hKYHZY0p+xUYSTV0GYy0lClnJGipI1//cFMNBotpXI+yBy7aHV6nZ7J
SHIMfjDSkRJjI+34HhtpxxcvgdlhSXPKzkxGmuSYNMyUYZJqbhtpRkoGg7g/
6MVJJ+0jtF+bUUKe8SHTbF7qdHvtTq8bxVGS7lczUlxtrjfKphgbacf32Eg7
vngJzA5LmlN2phgpmcdIw6zP9mCUMdJAUjYCQLcXt9qAl3g+F1XX7A2R+V6r
AxiL0q7aipH66ScZyU0xNtKO77GRdnzxEpgdljSn7BS6JJmMJHCSM9JYM1J/
OBJG0pOS9KJ0qO1Wq4NPZAKgOiQXzeUlZIUMJfN0kG3sKa3vUsNXKkbCYZCR
HBRjI+34HhtpxxcvgdlhSXPKTpmRpFvRNCPhc5xikoyPND2YZD4IQIZJOzut
7e29a9d3dPrk+jbS1WvXr17bXpiuy5rmtsgKGQp9AZBASEjSJyqWruMpI3k2
PtJREGMj7fgeG2nHFy+B2WFJc81OmZEKHbazNEoZSae8/7YeBCDpqonb2u1u
q9Xd2+vstTq7e52d3XaW9pA627vt6zutQtpOv+2kK+Qr76rNkQmyQoYKkGJg
WJSPiSTNbfmAlqxHck6MjbQTQGykHS+8BGaHJc01O1OMBPqZeqktG2R7OEoZ
aZgNJjk0BpOU8STT6h0wTDrsdi/udCKkdjtqd6JWu4e0B2pSCfCz2yqllIiy
FWT9ttpc8lF0JJmDkWLFSAOZr60v3cjJSO6JsZF2AoiNtOOFl8DssKS5Zsds
bgNvgJFyTJpkjDQSRhrlA27jSLIKnDgbpCgRTEqHv47SEZO63VilpNONkRT5
gJeiPfDSrCTfYjVZHxtmOfSSbMTINPNYpXQvUo+UJAMykptibKSdAGIj7Xjh
JTA7LGmu2TmAkdR/h0YnanOspJyR9HCOanaStDYpTZ1OrJgnSVMvTe1uPDPJ
t9ma+G8nlhwkNwVFgkmJyUj9PhnJUTE20k4AsZF2vPASmB2WNNfsaEKK4zhl
pIyLJiYjmf23hZHUeEqakbKxHFWLW9rc1sVn1M/JxyAllaboyFieram2wuZd
lZVipAyN8gqlvuyOjOSsGBtpJ4DYSDteeAnMDkuag3ZKjDQRRhpPJrp70nBf
IyEThUlDGW1bUtprKE4UIIFzYpWSVidC0n2T5qW2Wg1JMVK6reTTUz2ddA2V
AqRhrGqWpAMVjt/OKaCqi7GRdsKIjbTjvpfA7LCkOWhHAKnASKN8lrQCI2Vt
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
yCRJGQmUkr7XBnSpxkirqtXuAJEUIw2ivuqSlDLSeuqRzpw5I+1rm5ub586d
44wkpshIZCTfYyPt+OIlMDssaU7ZMQGpwEjj6TGRNCMl/aEwUpIy0kAxUs/c
qixsf/HSe489c+HRp19CevK5Vz76/fbMhfNykPxbaZftWBrahJFiNYilnVNg
qjCn7SOPPCJL2CtJREYiI/keG2nHFy+B2WFJc8rOFCP15zHSKH+dbZAxUpoG
YCRQSs9gJHPbqfqfbu/fn39FWEjSixe3dlud8sK0xmoWHYnASN0ojoSRkr4A
0loYqTynLRnJFBmJjOR7bKQdX7wEZoclzSk7MxlJ84nutm2OiaQZSQ3kmM7U
1urMbWBajpHm5bbX7qpZ2/pRvM9IUezEnLYcVdIUGYmM5HtspB1fvARmhyXN
HTuFzkjzGGk0Gk8z0iB/8V8xUi9ptbqLD77di5564dXHnrmg00uvXwbwlBdi
Zwvy2dvrdLomI/VloO86f+jDC1zEGqSCyEhkJK9jI+145CUwOyxp7tgpM9Jw
DiNlc7TtM1K6suKTmhlpWJWR+lGSxGlaGyOZ87WdOnWKNUimyEhkJK9jI+14
5CUwOyxp7thZzEijfY2zPtv50JECSGoikqTXi1utA/AA5HPx7fcf/93LJg4h
n/LCgxip2+1GoDIwUi9eJyNJy9qVK1fOnDkDOnr88cftH4PLIiORkbyOjbTj
kZfA7LCkuWOnGiONTUbSwyJpRgK0HFiPZGq33X3yuVcKOLTbUgsvVqhH6vRM
RpKxvpf+VZeW7qHNN9pmioxERvI6NtKOR14Cs8OS5o6dioyUvddmDB2pRkYa
LMdIe+0ecOjC6+8g58ULZ2xrMFKkDnhdjKT7IG1ubm5sbOBv+8fgsshILjMS
ruq1nJqGxFDvrB0ykrNeaKeKphipf2hGUoMj9VVbW1VGSpLBSxe3HnvmwrtX
ri5eOFNgJCBZL8rma1sjI1GLRUZanZHOnz//KaVjx47t7OzM+6nPnj1rrnPq
1KlPGUImZlbQiRMnoigaDAb2T01DYqh31g4ZyVkvtFNFdTFSe/67/1rdtNv2
a9Lv6PkLbyVqUKOZCxcoHR9p3Yy0vb2N29Dbb7/NOW0XiIxUSz3S5cuXb7jh
hgWMJCuUGUnQSAQiOqGEP+RbfFo4QV7HRtrxyEtgdljS3LGzLCMNlmakJ59/
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
ipF65lbz1I3ip89ffPTpl8z0/MtvYfmBdCT5t9Iu27E0tAkjxWoQSzunoCA9
XxtfaiuLjERG8j02FkQ7znoJzA5LmlN2phipP4+RRvnrbIOMkdI0ACOBUnoG
I5nbzqgF6vZeefPdtE7KWPLvz7/yzH+83k5HWFpERyIwEoAqEkZK+gJI62Ik
aoHISGQk32NjQbTjrJfA7LCkOWVnJiNpPtHdts0xkTQjqYEc05naWp25zUyL
GUnXLF289N48LjK11+6qWdv6UbzPSFHM+dqcExmJjOR7bCyIdpz1EpgdljR3
7BQ6I81jpNFoPM1Ig/zFf8VIvaTV6lax0O5Fr771HrKruLysvb1Op2syUl8G
+l7i91xd8l4bdOedd3LA7YLISGQkr2NjWbTjrJfA7LCkuWOnzEjDOYyUzdG2
z0jpyopP1sVI/ShJ4jSth5G2t7flrf+J6pjEPtsFkZHISF7HxrJox1kvgdlh
SXPHzmJGGu1rnPXZzoeOFEBSE5EkvV7cah2AB8PR6OLb7z/+u5dfev3ycBYj
PfXCq08+/+pHV3cW57O31+12I1AZGKkXr5mR9Jy2+OS7/wWRkchIXsfGsmjH
WS+B2WFJc8dONUYam4ykh0XSjARoObAeqd1NKeixZy7MSy++trW91057Ky2s
TUrrkTo9k5FkrO86f+jKevzxx6WJDXR05syZtRyDsyIjkZG8jo1l0Y6zXgKz
w5Lmjp2KjJS912YMHalGRhrUyEiSXro4o5bJlMlIkTpgy4xUmMqWc9rOExmJ
jOR1bCyLdpz1EpgdljR37EwxUv/QjKQGR+qrtjZ7jAQk60XZfG32GYmqKDIS
Gcnr2FgW7TjrJTA7LGnu2KmLkdrz3/0XaUaaSUGLvzWVjo9ERvJBZCQyktex
sSzacdZLYHZY0tyxsywjDQ7LSCKw0KtvvTeTkWYuL2sWI/XXxUgPPvgg29rm
iYxERvI6NpZFO856CcwOS5o7diwzUi9Knv6PizNb2cBIC4aO1HKHkcz32qiy
yEhkJK9jY1m046yXwOywpLljx1pbW11yqq1Nv9dGlUVGIiN5HRvLoh1nvQRm
hyXNHTu1MVLbFiO1HGIktrUtEBmJjOR1bCyLdpz1EpgdljR37Kz47v9RZiS2
tS0WGYmMZC02IkjVXq7K8jrUr8sOGclZL7RTRUuPIUlGmrCtbaHISGSkgpfz
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
S2B2WNIctzOe0mxMmlQjpTIsVUxmDuZ738OsfW0sjKT3bucU1KIj3mcby6XD
tjSfyd8gJdjRLWtSiWRuhVM87ysyEhmJod5ZO2QkZ73Qzip2lsCkWaRUQJ1F
yFRec1Zu09nm+x0GwUiTo/Huv2YkAM9lpRuUBPmkAU4qkfoKjXSGrEciI5GR
vLNDRnLWC+2saKciJpXWrMA2c9P8zaZzloORpSPfGOmIaHFbW+GN/vPnz+O0
yutswksDpXHef1sklUiFbttkJDISQ72zdshIznqhndXtzMakChVKFWCpkmZm
qA9mqAApZaQhGck5LSiu0p6r15QzaxY8/FfWHE3TL9bke21kJDKSR3bISM56
oZ1a7FTHpFnrL8NL83KYznwy0ow0IiO5qAOLq8wzUmaemastJq7CrslIZCRd
eArhxXzrw5SUQ73+zJIZdqj32ktgdljSPLIzk1aWJqXlVMhW1R0pRjL6ODX/
81OH0xpjIxmJjNSfNeXNAo1nvfpRyDbsUO+1l8DssKR5Z2cRJhmkNDMerchF
+/lMJqO8cQ3BDMlgJJ/GRzoiIiORkdbLSFioB2w3df78+Zmz3kzy9wJE0i/u
QDtNKKQ7FxnJWS+0U6+dmSAzj5SqPrxVkJmntKyppBlpNPJtDMkjIjISGcmp
eqQDZ73Ro7vrb3W/uAV2CvkUYGxS4i4cxjxCs3zthAQVgdk5IlARnp15VT6L
YemwyDRz8+xFtpHJSGNPx9k+IiIjkZHW3h9JHwbilAwrAW4Zzpr1ZqLGnTAJ
alSa+KZinDFhrMxdpkxCq26nLoUEFYHZOTpQEaSdqqQ0B5YOl6YzNIYIGJOR
HBcZiYzkAiMVWMh8ZVLG6ZIBJcoVQebKC+yUpWFsUuKuguYRlCOhvhaRkZz1
QjuN2lnQk+jgdBALzUnmy3H7jDT2bZztIyIyEhnJBUYaGeNuXb58WaqGhtOz
3uh1hFiEnYRzzKqkKrHRxJ6Z3KXX1IRWJiinQv2KIiM564V2LNip0vl6hVRU
gZFGxvLmfnZqOZGRyEhrZyRzckDwiW5lG01PbaN7dwtH6YY5bHgoRjIzmRiM
VOAuWVkT2rqunZCgIjA7RxkqQrVTAZZqUGEMSTKSyyIjkZHWzkjD6YlvdCWS
SUFDNRSSiVKaZzY3Nw/FSDoH+W8BmfQeJ3M6kFu+dkKCisDsECrCttMEHZVy
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
wCPwsWPH7rrrrtrn5kCkldsfQiJuW7feeuuf/umf4r4s58icqWF1oYD94Ac/
wPMjYv5tt92GqNtQn8ynlHB2QBHYkS4Jddmx1kF3cSftul7WkGcK3LZwzwJC
4M7+z/9/e3f700S2wHH8n9trfG32tTfsKyREQzC6sD4QL0poBFckSGxCikqB
imhRYkDENYvXpDXEXKMgypOKVgnE9aqAV9r7S0/2ZDLlaZc5Lcj3E0KGoZw5
LdMzv545M6e7WyEw8Fud65+iA7GicnNzs47CesXUIJg+kADbAe1mZpdWma2t
raOjo4EU66M3jre18c1BEFQ7kMl+ktXbX+2MMmRxcbF2Nr1D1+iO+3v0XOrr
6/WWbGhoKM3Sho4fP25iXrDtwOLiYlNTk7mlOSfdsC0UNia5YDOS3vsuZqM2
vBlJn7tdXB6rz7w6rJhmPxwOu5gvPpPdAaLRqF4x/V+ePXumNtnFPah1TFd7
mEqltAMoVNTW1jq6d64Ou1evXtWLpoy0f//+FU+6bVJ+Buhm8nVHfdVfB0Ql
ChPC9XJpTwv87jR6rbQV7QM2Tyr+qeUJdited+7cicVi7so3tL8pZAY4o6uP
3jLKYEovJrG8f/9eH5cCf4cq9akFUCPz8OFDE1m17GLGamUk5TE7OF+NgBoc
xTMXM+UBQfnOYpLJSGaEg/dEVbBsRjJXMbuYgFWvkv0Ep2ekzQW+CcO28Ho6
ao0dzRV+5coVhbEzZ85oNzNDelwESx0+9EKpHdahX8cXpRd7YX6AHA3QzeVi
kHbuJhRdDhw4YAeHx+NxF5MYqsySkhIzK30m2xqo2XHXFGg3Vpxw9ynJmJ+f
r66udjHXm6V3pV4o80Q+fvzY2NgY+PW5xq1bt0x60T9F8dJRb/zAwIC9DnRs
bExNNP1I2PpMTMrDxy41jCdOnHj79q27TSgjdXZ26hCs1tjFbJiGMpJSpd7v
Ckj2fjKOmP+OoybLS0dJvW6OzoLdvXv39OnTpj3MndwqKOZyb3uIz53gLHBB
DdBdW1CDtFcrvL29vayszIw5r6urczStsD5QaCtmvLF2Bqf3CdSepoy0+RHa
azMnK13cQspSyRcvXmxqapqcnFT+7+vrc7QhBSSlF/1T+vv7g20H9H4sLS01
V+fZna25ubmiooJ7RWK78PZaOOWuX9p49OhRcXGx04CUyR58lZGOHDniOiC9
efOmpqbGzDvgbivmUp3a2loXHWLGd7ODeQU4QHcNAQ7SXo2Z1aKjoyOQMedr
UIjVJrShAAfqr0YfK7Qt1yf3FV30oczpzag/ffqkGBYKhUZGRtw9Hb097927
p/1ZMSzAzK+mUqn43bt3CsbmLvR6ChMTE2pw8rAPAPBRY/Xy5cs8HI4VJ/Iw
IbWeTrDzMa3GjnfFxgU4QHdtjqa3AJxSU1xfXx+NRk2GNPd3CnyyHgAAgO3F
nFmrqqoyFzhksjGpuro6D58uAQAAthpzAxN7q3ZzHajNRfk8Gw4AALBFKBS1
trYePHjQTpuSG5MAAAB2mkQice3atXQ6PTg4WFZWZmNSb2/v1NRUoWsHAABQ
GCMjI3Nzc7Ozs5FIZGho6PDhw/F4nHHaAAAAmewcmo8fP/727Vs0Gm1ra3N3
UxEAAIBt5PLly11dXYlEwukNNgEAALYaJZ9kMtnY2BiNRnPvBjk3N3c6ix4k
AACwoyQSiUgkMjs7Ozg4WF5e7nouAAAAgG2htbV1bGzMLE9NTVVUVNy8eZOY
BAAAdrgbN250dXXZUPTixYujR4++evWqsLUCAAAorFQqVVlZmUgk7Jr+/n4F
pwJWCQAAIP+WlpY6OztLSkoOHTp0//795eVlM0etuUukPH36tKOjo7CVBAAA
yLPe3t6enh5Fo+np6crKykgk8vXr1+Hh4fLy8paWlgcPHoRCIZuXAAAAdohL
ly5NTEyY5UQiUVJSYgZpf/nyZWhoKBaL5d4BAAAA4LsXjUavX7++vLysZYWi
27dvV1dXk4sAAMAONzs7W1VVFQqFWlpazp079/nz51gsprBU6HoBAAAU2NLS
0uMsLejHeDxORgIAAPBKpVINDQ1MNQIAAGBNTk7W1NS8fv260BUBAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAgJ0lnU4/f/58fn6+0BUBAABbxdlI/B//PGK+
tJz7gIXFpV/qLtrHJP/zPP+VlGv9/zYV+Onns/N//NesHH/59sfSU76V9hmp
2qq8LUHrV3yConRUVFR0/vx5haWZmZn29vZwOJxMJhcXFzPZBPXkyZPR0VHH
TxEAAGwJJvx4M4+Wfbkik40Wyieb2dDmS1AWCnf2mWUVZaKO6nnqfEy/ymRr
blZqwW7Lu10tFx3+1RaS68KFCwMDA/v27fvBY8+ePSdPnty7d6+Wu7u7N/MU
AADAdtH3+7AChu0m+rH0lH70ZozMSjnKiPb8ZvttVrTuA/7Sw7xUSUUjVcwu
aKUKOfCvCyYvWTY4mYjlDVq5wuFwW1vbD6sjIwEAsBMoWrT1/KbvSkS+UGTW
2zX6rfdMVsZzMsustye89GWK8j1AP5qUZc+XmXN265azIm+XkT135u1T8tbc
W4738bnISAAAIJMNFX2/D2vBdLB4f6X1vtNtJr2Yjibztwobuf0/WvNL3UV9
9z3AZCQTlrwlr1tObrW9v/J1edkkZutse5kMMhIAAFiXtx/JGy1y+5EsJZOf
fj6rB/uyjbf/x/QIrZiRMn/2L9nNrVtObp29nUVr9COtmLLISAAAYCN845FM
LPF1zviYs1febOMdCLR2P5ItxCaldcvxbjp3ZNRq45FWHJuU2VhG2r17dygU
SiaTqVSqr6+vqKhI6WjXrl3Hjh2bmZnZ4AsLAAC2tdwxPLnnp3yPNynF+4f6
rkBiT37ZfiRvyb6MlPnzNNm65eRuesX6ZDxX5K0WkDIbyEgjIyMLCwvelel0
+sOHD76VAADgu+e791Huhf++B9guJjP62iQZOxJbgcf2C3kfYMcj6UffqbR1
yzH057YO9hK8zEr3R/IOC/eds1s3I42Pjwf8+gIAAGxzHR0d09PTha4FAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAn+vot
/ejNQs/Tj3fHP/2xuFzo6gAAAGQW/5e+P/VZ+UTftfw3Svg/+0ihLQ==
    "], {{0, 501.}, {780., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{780., 501.},
  PlotRange->{{0, 780.}, {0, 501.}}]], "Input",
 CellChangeTimes->{{3.833379748773936*^9, 3.833379762503955*^9}, {
  3.833379800884009*^9, 3.83337980888902*^9}, {3.8333798405590644`*^9, 
  3.833379845259071*^9}, {3.833380191089555*^9, 
  3.833380195894562*^9}},ExpressionUUID->"cc844741-28ae-408b-b26c-\
20b4c9df7385"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8333797753189726`*^9, 
  3.833379776498975*^9}},ExpressionUUID->"f7893295-85be-402f-9730-\
d7c1fe71cca0"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
   "Ta", " ", "statistika", " ", "prikazuje", " ", "\[SHacek]tevilo", " ", 
    "sprejemov", " ", "v", " ", "bolni\[SHacek]nice", " ", "z", " ", 
    "anoreksijo", " ", "nervozo", " ", "kot", " ", "diagnozo", " ", "v", " ", 
    "Angliji", " ", "v", " ", "letih", " ", 
    RowBox[{"2019", "/", "20"}], " ", "glede", " ", "na", " ", 
    RowBox[{"starost", ".", "Najbolj"}], " ", "prizadeta", " ", "starostna", 
    " ", "skupina", " ", "je", " ", "bila", " ", "od", " ", "15", " ", "do", 
    " ", "19", " ", "let", " ", "s", " ", "skoraj", " ", "2"}], ",", 
   RowBox[{
   "5", " ", "tiso\[CHacek]", " ", "sprejemov", " ", "zaradi", " ", 
    "anoreksije"}], ",", 
   RowBox[{
   "\[CHacek]emur", " ", "je", " ", "sledilo", " ", "pribli\[ZHacek]no", " ", 
    "1"}], ",", " ", 
   RowBox[{
   "9", " ", "tiso\[CHacek]", " ", "diagnoz", " ", "v", " ", "starostni", " ",
     "skupini", " ", "od", " ", "20", " ", "do", " ", "24", " ", 
    RowBox[{"let", ".", "\[IndentingNewLine]"}]}]}], "Text"]], "Input",
 CellChangeTimes->{{3.8333802042895737`*^9, 3.833380238824622*^9}, 
   3.833380324584742*^9},ExpressionUUID->"e1e14c5b-6b36-4e2e-8ea4-\
591e0d2d444c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8333784040267515`*^9, 
  3.8333784040267515`*^9}},ExpressionUUID->"155feba1-8229-4c6d-b41e-\
503d0c7380b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Odrasli s prekomerno telesno te\[ZHacek]o v Angliji 2019 po spolu in regiji\
\>", "Section",
 CellChangeTimes->{{3.833380393629839*^9, 
  3.833380406999857*^9}},ExpressionUUID->"50a40118-cd4e-48f0-a832-\
b49a5fb2ba6a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
QZ3mqHIvqBWpYneUatbd+omfM5ISfua8W584qrkGNVHEUfVpO1MclUp6sCNH
8eRRAZ/XKyPOfEeK4hwFXwdfGge6yxwVRhwVji5d3bzGOarPOarPimNY3hL/
VItIrAtT8feWLtUH8/zUu4npofwj6to5KnFBneAoEXNb4gW1ClXsjlLNuVs/
/XNGRdbsI45qrkFNFHFUfdpOWRxlzs57IOvqZvf1dzMgCsqbJz8x7Z3jl1j+
qJij8oxHxRzl8KInDyecMav/3nJVwcGcOaIu593F7vT48eP5R9T1clQ6P2GC
ozAcd9yEC+oq3VFq0Ky79ef/HBHbTPN6qqXFoCaKOKo+bWdRjgoX4yio8/zF
q+e+uWJYztsfnAV8+viLb2zX+/DsV1tdI08NCY7iYVq+SH0QxCsXp+Ojeoat
5X49OfUBxUfV5ESg7jQdzL6gnjUeRRfUFRuUvltfRNpkKs/d+vPdWbHmo1rV
G9REEUfVp+1UzFFCg+EQ2Ak46sKVzUIfFBwVj0EFccR7lIrT5xnXE/frYTFy
jHeRMtWIgzktXXkPMi+oM+OjCq1stWJnal0cJWyafyd+0TzPFbvzP/39/1Fi
KWpQBarSoCZKS+emTq3kqAXn9ZZXFkcxgpI5KuR5Dza2enL+qL7FSjU7uXpq
xMGclq6uJjM/YWK7fIndzhEPvRxVuoijai7iqNq2nTnuNKJnqzjOfHlhnLm4
X09wVLR0crzK3uWrm5yjrKk8nDryR62tre3evXv//v2dTqe5MeeNOJjT0tvV
NH3EQ5c7lRlUroijai6NHIUR8kJ4f2tiI+jRRx9tyqJXlbnTiJ6tyrwHpQjz
HthsSMqPOQoX+xsEPEconr7Wr2xsbHXF+np9revrra+v48p6tL6e0oM5rZZ0
NQ01iDhqGXc0clQT3ZlvkGqJBY4z/yrm+oGa6r/oVcXuqGg747KbT06OKiUP
ZymSOQrzcEoQNcBFAGOOYvN6jKNwPMp0q+cozHuAHHXmzJknnniCxqP+njiq
7K6moQYRRy3jDnFUiQap1nyOwiBJgKjMrLyz6myJOyrazlgPR5WwLswod5kv
XBdG4qhocT3BUXwdwAA5artrdHtWP4aovqFhXu/cuXN79uxp9M1642aepset
6WoaahBx1DLuEEeVaJBqyVN4CZqS1+yr/6JX1bujou2Mq+Wo0RLrFBeio/wf
xHWKcX29ySLFAS8sNGrAeS9cv7K5ud1nHNW3eobFOMpwtHDUakjRwaxaLelq
GmoQcdQy7hBHlWhQNRLzdzJKpYeq6rzoVfXuqGg7Y/UcheiS5iicL5M4CuOj
QsFRvI5FwGm+prBqNJI4KhCDUchRQRwcBf/h/XoxR9kdw4bHXr+iObVE2ijK
HzXrYFatlnQ1DTWIOGoZd4ijyjKoyraD1CRm6zDVSYKU6rzoVRDfPiPNVQ3l
22Twr+LemZAr8cHMPW80R40nyDSPo/ggj8xRGNodc5Trm/BfEGbi03AhpeuB
yuEr4Issfr8e5yjYgQEU+G7BUUGc94CNR/UMlvrAsLtQGFBpiE164YUXkJ3O
nTv3+uuvV78DpajKrqZEteRE0FCDiKOWcYc4qiyDKms76fGo9O14NV/0KpHR
BSXytMh/jagifr5jXpeV5CixfRApQik+tTcUHOWHbCDI8XyLxX5PZs1SWDQq
WLKZCr6CfZHrcXCacJTH8kehjQNEqUuXN1geTpbP3NbIUfI6xfBI9+vt2NWU
q5acCBpqEHHUMu4QR5VlUAVtR17RRkARYpVY9WYcB5zXedErJKV0GgfkIjhZ
ixAv2Ciep9M4aHdHLUelQqQGE/E4c77qSpSsiZUo+4HteIYJgOPNZqf8yv4g
VA5fARwVhZcDRwUDUYKohBOO6rDxKGCnXt/iHMVKplPqBOz0xBNPnDt3bsyZ
CrNIVbwPpagpB3NCLTkRKDJIlzuKDCr356y8O9U3H10GqXCnAmnnKDGMhuNL
+M8riPEIV2Yah0JJhhW5U3rzmRNqjgATc9RIcBS7OY5zlFggxnFZSnPDsOCR
ZSIYDAuy00ymgqqgQlG5Dd8kloPhBOUPhhJHRSi1fmVzY7u3jevCRONRGjhq
PB0r1dwFi5tyMCdEHLWMQbrcUWSQrtN0Q92pvvnoMkiFOxWoJhw15PFRA2mp
0O985ztpjhJpHGbt9upxlAiRkjgKHkcMpTB/1HRCzjgBQoRS3a7R6fS3trui
bG53oGxsbW9sdeaWbXyn/FmoCipEiIKvwHQHcvpNLxx4/EZCxngcpeDPwFHX
trrIUWxez3R0cdRqqCkHc0ItOREoMkiXO4oMIncKudOe5qPCnQqknaPEuNOQ
L3GFs3jwUkzeZaZxGMWLZOl1R0XzSXNUIsg8KkPGUaLEMeciAYJv84X2TNM2
DLvft/qGxebUWDJMXli0ktXpmdtdI1H4gsIWe0P85h7/OFQCVUGFfCRqknuT
F1xQb+hPiA4Ho4CjwvWrMUf1LFazPo46ePAg3a9X5cEsqyUnAkUG6XJHkUHk
TiF32tN8VLhTgXQNtg/jiGU5bB6fIyklgufTaRwKLcKuyB0VzScRIjWculkv
SmY+GDKOGkQJOQdSQk7MyckIx3HZnXQAPJblQjFN17Rcw3Sg9A0bSw8TOiUK
o6boDfh+k38c67H5DXrxYJQ3SRsVpd8McX9ilGJl/erWta3eFs/D2WHxUchR
OuPMG60GHcyyWnIiUGSQLncUGUTuFHKnPc1HhTsVSG/QgjwwBeAkouIzlxFM
p3FYaY5iKMXAaTQayi8ZPiFHDePE5hxXQkx9gHmcfEQptmyxyzJK2bbHi2/Z
HhROR8BUbt90Mgv+Fd6G74cPRjWwbFEs2yeORAFHxaNSk/QLURpzFqwVoRRw
1Ma2scVGuhhHbbNRKT1x5s1dm1hWgw5mWS05ESgySJc7igwidwq5057mo8Kd
CqQ974E8HiUnQ5DHo2alcWgjR/GXAynwW84lFXNUVDhH+XxUihXL8jgX+aw4
rJi2l1nwr9E74aXlYQ1YW5x1M0CIEhyF+yDSmIsJvkssznyKozo9lvpA1TE9
W0ePHm1ueLlQgw5mWS05ESgySJc7igwidwq5057mo8KdCqSRoxJpHIZxKk75
r8BRIo0DbJTTOKz6vN5kIo+z01jmKDnmHDnKZ/fNCY7CnJw4u8em9mx4dIOY
jiSa4mWKoKTt0Tv5p+DjNq8KV4FBdsKBKXzueYHgqCBKnZrgKHO7awJKAUfB
k+o5KpHYnOKjKjiYZbXkRKDIIF3uKDKI3CnkTnuajwp3KpD28SjUUMpnPitL
545JOKt3R1HzSXHUeBiHnYtwKTmXFKYX4Cg1iPEGB6M8x/M5RAELebz4huVC
EbFSs4rJ3waFcxT7LNbjeBgcFQ12RZnMvcD3ozX1hC/RnONgsH5t+9pWn3FU
z95mj3o4amXUrINZqCUnAkUG6XJHkUHkTiF32tN8VLhTgTTGR4nFX2a1X3wP
DrxkUpN2dxQ1n5G0lJ7gqKF0757MUdG8XnxznOAoB0eQXEAgYCHXtAGKnLjY
fXPnAm8TH+FLwLACFTKaciWO8gDhopX+cCAKrYtj4BlHXd1OclSnZyo/uFM6
d+7cnj17du/eDY+YkLOJatbBLNSSE4Eig3S5o8ggcqeQO+1pPircqUAtSY6n
yB1FzUfiKHZfIysxR42nc0mFkaJ8TT4fGmIc5Yds5Tt4EQ7EENbygqqgQqgW
KoevYBzl+shRPLO6vEJiBHiD4ZCNRyFHdYGjrK04u4LaIzslOZ85PMLzhsac
N+tgFmrJiUCRQbrcUWQQuVPInfY0HxXuVCDiqGXcUdR8luco2/WBaqJgqpEc
rL44QckFKrcx5nw2R0UjjhkcFSWtUntkp0Tr62k5mIVaciJQZJAudxQZRO4U
cqc9zUeFOxqbjyJ3VGs13BktN69nO57nB5Og9FRZGJ8mZThy+YLIc+b14hsJ
Q+SozY6B83pbXYtzFI1HLahmHcxCLTkRKDJIlzuKDCJ3CrnTnuajwh2NzUeR
O6q1Gu5EDLNQnDkbjHK8kMXkj+eg1FKF7cQYvgI4ynF9zx+wOPMgEWcecZTP
OWpjK8lRnZ6GOHOKj2pPV6PrRKDIIF3uKDKI3CnkTnuajwp3NDYfRe6o1gq4
MxkLWijvAQ4TiXToJdMUJyhR4lX2MNNCEI9HYd4DPkQ2YBx16cpWzFGWXo5a
DTXoYJbVkhOBIoN0uaPIIHKnkDvtaT4q3NHYfBS5o1or4I40q7ZIHk4AG8t2
ZNopAaim8UniKNt23Iij4nm9yUjUNEdtdfqMo3qMo1hCTuKoRdWgg1lWS04E
igzS5Y4ig8idQu60p/mocEdj81HkjmqtgDs7cNTcdWFwWT3TskQNM4FqMtKV
DU5YZtWAtRumCRzFp/YYR7El9sSQFK6bHDK4EhzFUx/o5Ki1tTVMwknzeivf
1eg6ESgySJc7igwidwq5057mo8Idjc1HkTuqtQLuJBBIBETlWaeYz+vJHDWP
phYtEwFHOW40HuX6gR+Fu+OKMJOlky9e3ry22eXpDhhHbfdszlFVr6/X6XT2
79+P9+hRnPnKdzW6TgSKDNLljiKDyJ1C7rSn+ahwR2PzUeSOaq2AO1PwI92j
F8dExWU4AnwSJZ7XY2sH83m9TJWDT0KmZXOOisajAjEMxZ4PfT9Cu4uXN6Y4
qm/p4ijKe9CerkbXiUCRQbrcUWQQuVPInfY0HxXuaGw+5I4Wd5LMk5UzinPU
CAriU4CPEcOI+Kg8KgxOaY4CkPJwPRocfQoHccD5EJMhyBzFF9fTxlGg119/
HafzgKBeeOGF6negFDXlYE6oJV2NIoN0uaPIIHKnkDvtaT4q3NHYfMgdLe6k
OQo1zVEDBlHhkOXehDIY+iy9AMvUBBwFWAN4k4+jlpVhWoBRCE5uwEPNGUeF
bCQKIIpxVJDgKIZSfXbX3nZX8zrFzV2tuCkHc0It6WoUGaTLHUUGkTuF3GlP
81HhjsbmQ+5ocWcKoqY5ajSdM0pwlB8MkKMwqJtzlCN/Kr8Gw+H5C1f/473T
b6+d3e4ac96J9RsszNzDST3kKJ4AIYYoNq/HOOrC+rWNrZ52jloZNeVgTqgl
XY0ig3S5o8ggcqeQO+1pPirc0dh8yB0t7kxx1HgWRw3j2/TCiKOC6OY4IBlH
4ij5s3l0+VrntXdOH3v7QyhvnjwDkDSLoFDAUbbLFtpjHOVjFilevMDHUSk+
r5fBUSyRVNUc5TjO4cOH4RHv2jt69Ohi9XS73dtuu+06LngCL3H7kSNHcCM8
gZeu6+7duxdewteJNxw4cGD5H9KUgzmhlnQ1igzS5Y4ig8idQu60p/mocEdj
8yF3tLiTyVGCYUSouZwzSnAUu2mOr6xnWDNvQ5vPUWfPXUCIwrIVD0nNqq1v
2mw1ZDdwvQlHYdg5rvQX36+3gRy13TU1chTGmePj+vr6wnHmAE4ASAKfUABL
sBHYCbYDpJ0/fx62ADjBS2An2I4vS/khTTmYE2pJV6PIIF3uKDKI3CnkTnua
jwp3NDYfcqd6d+RRnzkcNRyOpjkqjJMecI5yfMPIFcIdBOFmp9/tm1Bhz7A/
OHPutXdOi/L2B2cd15tfQ79vWbbMUQEmVBcchXtYK446c+bMoUOHlrlfL5Oj
AJYEJuG4k8xRly9fRpoq4Wc05GBO73ZLuhpFBulyR5FB5E4hd9rTfFS4o7H5
kDvVu5PmKFSao6I19SYcFWAkUn6OMm33rbVPEJn+4/2P2ON7H312/tLnX62/
8f5H73zwaae38zrCEkcFrg/45AuOwqm9TI7qaOIo0NGjRzEDp5wDoajEvJ6Y
1MMpPDF/B0+QmnBe76233oKXCe5aRo04mNO73ZKuRpFButxRZBC5U8id9jQf
Fe5obD7kTvXuzOeo4USjKM58IHJdRmNBjus7jmcYO+PBlxeuyKNPn56/6PrB
jp9KqN+3bdsFcgOOcrwJR7F5Rh5njhx1ScofpZejyhXwEqJUJkeJtwGw4Ttv
vPHG8+fPL/+9jTiY07vdkq5GkUG63FFkELlTyJ32NB8V7mhsPuRO9e7k46iR
zFEibZTgKACbPONRJXGUZVmOzFEYWD7NUYP6cBRGmGNWc4w5X6Y2EQo1zprX
E994JBa8c9++fYVm95DNEo+lH8xYc7kHc+aeQwtNP5b7c0TNpXc1iT2Hribz
N47L7m30ulP68UbuLOYO/qJq3Cn9TJ2555W5U/rxRu7U2R2ApZMnT/LHNeCo
k/H4RnpSbzCYQFQQZY4KC3GUIc/rvcfm9V4X83rvffR2/nm9mKPYujBsejHk
RMej330cK6sLRyUizJfPZy7Go8ZZceawER7hW8acrBbjqEyVezCLakvvahJq
ySWbIoN0uaPIIHKnkDvtaT4q3NHYfMid6t2ZGo9KJT3YkaN48qiAz+vlijP3
eZx5J44zX/t4Ks4cKMvOEWcO2Oa48fp6hTiq8nWKMe8BctSZM2cWXl8PcOjG
G2+87rrrEvN0ibwHMjVhSBXN67Whq1FkkC53FBlE7hRypz3NR4U7GpsPuVO9
O2VxlDk778F8nf3yooxS2z1j/vtZ/qjmcNSYL0+8Z8+ehqYxF2rEwZze7ZZ0
NYoM0uWOIoPInULutKf5qHBHY/Mhd6p3Z1GOCsviqCsbndffneQ92HE8Kouj
gtpy1DL36NVKjTiY07vdkq5GkUG63FFkELlTyJ32NB8V7mhsPuRO9e5o56jh
aPTVxWs8PupsZ6fBqHHTOAp06NAhXKe40WrEwZze7ZZ0NYoM0uWOIoPInULu
tKf5qHBHY/Mhd6p3R/u8XlE1a14vsU5xc6f2GnEwp3e7JV2NIoN0uaPIIHKn
kDvtaT4q3NHYfMid6t2pOM58eTUrznxl1IiDOb3bLelqFBmkyx1FBpE7hdxp
T/NR4Y7G5kPuVO9OzvxRpeQ9KEXNynuwMmrEwZze7ZZ0NYoM0uWOIoPInULu
tKf5qHBHY/Mhd6p3p8o8nKWocXk4V0ONOJjTu92SrkaRQbrcUWQQuVPInfY0
HxXuaGw+5E717uTjqBLWhRnlLvPV8nVhdKkRB3N6t1vS1SgySJc7igwidwq5
057mo8Idjc2H3KnenfkcNVpineJCdJT/gznXKb6kdZ3ilUl3INSIgzm92y3p
ahQZpMsdRQaRO4XcaU/zUeGOxuZD7lTvTpqjEF3SHBWGgzCa0QtFYcHeMUfx
OhYBp/mawqrRSOIoFmeOY2LIUT5HqUyO2tbEUSsDVI04mNO73ZKuRpFButxR
ZBC5U8id9jQfFe5obD7kjhZ38nAUn9STOWrAS8xRrm/Cf0GYiU/DhZSuZ8SX
lTEsx3JkjsJ9mHAUAp5ejgIdPXp0d0qU94C6GhVdjSKDdLmjyCByp5A77Wk+
KtzR2HzIHS3uZHKU2D6IFKEUn9obCo7yw9ALQsfzLRazNFkMN4VFo4Ilm6ks
2zEtx3Y912ffKzhKTOrh/XqeH1xcv4YcxSb1dHAUisajqKupoKtRZJAudxQZ
RO4Ucqc9zUeFOxqbD7mjxZ0pjkqFSA0m4nHm4TDiqBBLxC224xkmAI43m53y
K/uDUHnfsADYomgo4KiAPSJH8SBzzHsQZHNUl+LMF1dTDuaEWtLVKDJIlzuK
DCJ3CrnTnuajwh2NzYfc0eLOnFBzBJiYo0aCo4LBEDlKLBDjuCyluWFY8Mju
nRsMC7LTTKaCqqBCrJwlM4dv8qPJO+Qo2A2Jo6KEDOJ+Pe0cJdYphsfmLhDT
lIM5oZZ0NYoM0uWOIoPInULutKf5qHBHY/Mhd7S4MyfUXOIoeBwxlML8UdMJ
OeMECBFKdYFeOv2t7a4om9sdKBtb2xtbnbllG98pfxaqggqR0ACigKJ4lgMW
o+VhuDvjKJY/KgiGnKPCBEdt6+Mox3GeeOIJxCd4hOcNneNrysGcUEu6GkUG
6XJHkUHkTiF32tN8VLijsfmQO7rcSXNUIsg8KkPGUaLEMeciAYJv84X2TNM2
DLvft/qG1etb3Z4ZlT4Uq9Mzt1n491TpsL9a7A3xm3v841AJVAUVcojyANXc
OGcUTu0FUug7m3CM4qOm8kdp5Cg5Pgoe4TnFmVNXU3pXo8ggXe4oMojcKeRO
e5qPCnc0Nh9yR5c7iRCp4dTNelEy88GQcdQgSsg5kBJyYkgSGyYCzmHpzR3P
slwopumalmuYDpQ+kBUvAEg9I1UYNUVvwPeb/ONYDycorBw4yuMcFeL6egGG
vvPodx64JdaF2RQctYUoReNRS6hBB7OslnQ1igzS5Y4ig8idQu60p/mocEdj
8yF3dLkjT+0xcBqNhvJLhk/IUcM4sTk4GA0EeVESJx9RiqUZd1lGKdv2ePEt
24PC6QiYyu0DU2UV/Cu8Dd8PH4xqcPwo6yar3OOFfQuOR7HEm5yjeOBWdAsh
ctTGVh84aotzFEMpxlHmrI5OnSg+iroa1V2NIoN0uaPIIHKnkDvtaT4q3NHY
fMgdXe7swFH85UAK/JZzScUcJVJi8pVi2KgUK5blcS7yWXFYMW0vs+Bfo3fC
S8vDGrA2Dk6IUr7MUUEw4aiQ7w/44Yc14qjVUIMOZlkt6WoUGaTLHUUGkTuF
3GlP81HhjsbmQ+7ocmc66+YoZqexzFFyzDlylM/vm4sJKsqHyWf32NSeDY9u
ENORRFO8TBGUtD16J/8UfNzmVXGOivApHpgK8OuCKZTic3wSR20iRHXw0SCO
WlgNOphltaSrUWSQLncUGUTuFHKnPc1HhTsamw+5o9GdFEeNh3HYuQiXknNJ
IbpwlBpgVnMsLIrJ8zlEAQt5vPiG5UIRsVKzisnfBoVzFPss1uPwyCsx0sUh
auDxESp2516Ih1OEUiHnqPWrWzFHWcRRy6tZB7NQS7oaRQbpckeRQeROIXfa
03xUuKOx+ZA7Gt2Rl9ITHDWU7t2TOSqa12PowlJfCo5ycATJBQQCFnJNG6DI
iYvdN3cu8DbxEfg41gMVMppyJY7yWMIoNhwVDUYFMkcFnKOubSc5Csqsjo40
X806mIVa0tUoMkiXO4oMIncKudOe5qPCHY3Nh9zR6I7EUaAxKzFHjadzSYWR
Biy0GzkKB6P8kK18By/CgRjCWl5QFVQI1fLKGUq5ro8cxXNGMYjyfV/M6wFH
wfdPOKpjsdI1iKOWUbMOZqGWdDWKDNLljiKDyJ1C7rSn+ahwR2PzIXc0urM8
R9kum2SLgqlGcrD64gQlF6jcwlipRnHU2tra7t279+/f3+l0Dh8+THkPqKsp
vatRZJAudxQZRO4Ucqc9zUeFOxqbD7mj0Z3RcvN6tuN5fjAJSk+VhfFpUoYj
ly+I3KB5PczDub6+jhk4KQ8ndTUquhpFBulyR5FB5E4hd9rTfFS4o7H5kDsa
3YkYZqE4czYY5XgAMFP395Vb2E6M4SuAoxzXb0qcueM4hw8fRo46c+YM5eGk
rkZFV6PIIF3uKDKI3CnkTnuajwp3NDYfckeXO5OxoIXyHuAwkUiHXjJNcYIS
xbQcvHevKXkPRB7Ohx56qKGDUeNGHcyyWtLVKDJIlzuKDCJ3CrnTnuajwh2N
zYfc0eWONKu2SB5OABvLdmTaKQGopvFJ4iibr1bcjDyc8vp6jVaDDmZZLelq
FBmkyx1FBpE7hdxpT/NR4Y7G5kPu6HJnB46auy4MLqtnWpaoYSZQTUa6ssEJ
y6wasHbDNIGj+NReM9aFOXToUHOXgxFq0MEsqyVdjSKDdLmjyCByp5A77Wk+
KtzR2HzIHV3uJBBIBETlWaeYz+vJHDWPphYtEwFHOW40HlX/dYo7nc5DDz20
O1Zzp/YadDDLaklXo8ggXe4oMojcKeROe5qPCnc0Nh9yR5c7U/Aj3aMXx0TF
ZTgCfBIlntdjywfzeb1MlYNPQqZlc46KxqOCeHqR5UAAjvIR7cJLlzcERzGI
6uvhqJVRgw5mWS3pahQZpMsdRQaRO4XcaU/zUeGOxuZD7mhxJ8k8WTmjOEeN
oCA+BfgYMYyIj8qjwuCU5igAKQ/Xo8HRp3CAL4NgyJNKsSEywVEdgCjiqKXV
lIM5oZZ0NYoM0uWOIoPInULutKf5qHBHY/Mhd7S4k+Yo1DRHDRhEsVhuNn0G
HAX04jOOApJh9+sB3uTjqGVlmBZgFAen0A14iBTjKJ6WE0sQJDiqUw+OchyH
8kdRV6Oiq1FkkC53FBlE7hRypz3NR4U7GpsPuaPFnSmImuao0XTOKMFRfjBA
juJB3SHnKEf+VFrw+bPnLrz2zuljb38I5fj7H1+51sncOKsGrN9gYeYeTuoh
R3k8EWjMUSFy1MX1axtbvTpwFLCTiI/av39/Q+/da8rBnFBLuhpFBulyR5FB
5E4hd9rTfFS4o7H5kDta3JniqPEsjhrGt+mFEUcF0c1xQDKOxFHyZ6fGkWzn
byc+Rl7Ccurs+Z5hpTeyka8sgkIBR9mu5yJH+QFClMfXpmEQFcVHZXFUT0+c
OeYzf+GFF4CgXn/99Yp3oCw15WBOqCVdjSKDdLmjyCByp5A77Wk+KtzR2HzI
HS3uZHKUYBgRai7njBIcxZNhspX1DGvmMMtiHDWrtr5p81X2AtebcBSGneNK
f3jL3qXLG8hR211TO0fhynq0Lgx1NYq6GkUG6XJHkUHkTiF32tN8VLijsfmQ
O9W7I4/6zOGo4XA0zVFhnPSAc5TjG4Y9qw9BmY775skzr71zWpQPP/0KoCi9
kS2TPFv9vmXZMkcFmFBdcBTuYU04SsRE4WrF8LziHShLjTiY07vdkq5GkUG6
3FFkELlTyJ32NB8V7mhsPuRO9e6kOQqV5qhoTb0JRwUYiVQ6Rw3yclTg+oBP
vuAonNrL5KiOJo5aGTXiYE7vdku6GkUG6XJHkUHkTiF32tN8VLijsfmQO9W7
M5+jhhONojjzgch1GY0FOa7vOJ5h7BA+DXR09suLr7/7kYxMUE96404cZdu2
C+QGHOV4E45i84w8zlxwlMgfpZej5DhzysNJXY2KrkaRQbrcUWQQuVPInfY0
HxXuaGw+5E717uTjqJHMUSJtlOAoAJsdx6Nk9Uz7+PsfJ5CpZ/CNZ3OMR1mO
zFEYWD7NUYOacBStr0ddTQVdjSKDdLmjyCByp5A77Wk+KtzR2HzInerdyclR
0f16UvpNnjkqXIyj+qYDyHT606+h5vkbMz4rcZTL8CnA3WDxUQHmPQjrw1FA
UIcPHyaOoq5GaVejyCBd7igyiNwp5E57mo8KdzQ2H3KnenemOCqV9GBHjuLJ
owI+r5eXowB1Pjx7/rV3Tn+zvjF/Y6aAowDbHDdaX68YR/U0zOsdPXp0bW2t
+u8tV404mNO73ZKuRpFButxRZBC5U8id9jQfFe5obD7kTvXulMVR5uy8B0I2
CzX/BOOgTpz+Aphn1sY5Yvmjas9RieWJKT6KuhqlXY0ig3S5o8ggcqeQO+1p
Pirc0dh8yJ3q3VmUo8KFOer4iY8//3odUGfOxjnK4qigbhy1emrEwZze7ZZ0
NYoM0uWOIoPInULutKf5qHBHY/Mhd6p3p0qOKkVN4SjHcZ544olz587Bc3jc
s2fP7t27mzvB14iDOb3bLelqFBmkyx1FBpE7hdxpT/NR4Y7G5kPuVO9OlfN6
pagR83pj6U490P79+4GgGh1z3oiDOb3bLelqFBmkyx1FBpE7hdxpT/NR4Y7G
5kPuVO9O9XHmS6opcebAUYBP8Hj06FFMYy5ym1e2DyWqEQdzerdb0tUoMkiX
O4oMIncKudOe5qPCHY3Nh9yp3h0teQ+WUYPyHuBaMCK2/Ny5c0888QSNR1FX
U3pXo8ggXe4oMojcKeROe5qPCnc0Nh9yp3p3tOThXEbNysO5MmrEwZze7ZZ0
NYoM0uWOIoPInULutKf5qHBHY/Mhd6p3Jx9HlbAuzCh3ma/GrQuzGmrEwZze
7ZZ0NYoM0uWOIoPInULutKf5qHBHY/Mhd6p3Zz5HjZZYp7gQHeX/YDvXKXZd
d+/evddxiZv+ut3ubbfdhhvhCbwUbxPvOXLkyIEDB5bfgUYczOndbklXo8gg
Xe4oMojcKeROe5qPCnc0Nh9yp3p30hyF6JLmqDAchNGMXigKC/aOOYrXsQg4
zdcUVo1GEkexOHMcE0OO8jlKZXLUdsM5ao0Lnpw/f/7WW2+FxzHnKKAmeJTf
BuAEW4CdgKnwZSk70IiDOb3bLelqFBmkyx1FBpE7hdxpT/NR4Y7G5kPuaHEn
D0fxST2Zowa8xBzl+ib8F4SZ+DRcSOl6oHL4CsNyLEfmKNyHCUch4K0YRwkB
I+3evTsPR12+fBlpqpTvbcrBnFBLuhpFBulyR5FB5E4hd9rTfFS4o7H5kDta
3MnkKLF9EClCKT61NxQc5YehF4SO51ssZmlyyk5h0ahgyWYqy3ZMy7Fdz/XZ
9wqOEpN6eL+e5wcX168hR7FJvRXiKMAkYCekIzGvh5N6Y2n676233gKIkhFr
STXlYE6oJV2NIoN0uaPIIHKnkDvtaT4q3NHYfMgdLe5McVQqRGowEY8zD4cR
R4VYIm6xHc8wAXC82eyUX9kfhMr7hgXAFkVDAUcF7BE5igeZY96DIJujuo3n
KBmiZK2trQmUQh08eBA33njjjTh4taSacjAn1JKuRpFButxRZBC5U8id9jQf
Fe5obD7kjhZ35oSaI8DEHDUSHBUMhshRYoEYx2UpzQ3Dgkd279xgWJCdZjIV
VAUVYuUsmTl8kx9N3iFHwW5IHBUlZBD3660MR82JGJcn+8bx7B4KNu7bt6/Q
7B4GYiUeSz+YseZyD+bMPYcWmn4s9+eImkvvahJ7Do0w8zeOy+5t9LpT+vFG
7izmDv6iatwp/UydueeVuVP68Ubu1NydkydPAjLxR3i+JodISRwFjyOGUpg/
ajohZ5wAIUKpLtBLp7+13RVlc7sDZWNre2OrM7ds4zvlz0JVUCESGkAUUBTP
csBitDwMd2ccxfJHBcGQc1SY4Kjt5nNUesRp1l8BnDB9+sIclalyD2ZRbekH
c0ItuWRTZJAudxQZRO4Ucqc9zUeFOxqbD7mjy510iFQiyDwqQ8ZRosQx5yIB
gm/zhfZM0zYMu9+3+obV61vdnhmVPhSr0zO3Wfj3VOmwv1rsDfGbe/zjUAlU
BRVyiPIA1dw4ZxRO7QVS6DubcIzio6byR60ARwERXRdLTNXBIzxPbBHUhNFT
NK/Xhq5GkUG63FFkELlTyJ32NB8V7mhsPuSOLncSIVLDqZv1omTmgyHjqEGU
kHMgJeTEkCQ2TAScw9KbO55luVBM0zUt1zAdKH0gK14AkHpGqjBqit6A7zf5
x7EeTlBYOXCUxzkqxPX1Agx959HvPHBLrAuzKThqC1GqyRylXQ06mGW1pKtR
ZJAudxQZRO4Ucqc9zUeFOxqbD7mjyx05RIqB02g0lF8yfEKOGsaJzcHBaCDI
i5I4+YhSLM24yzJK2bbHi2/ZHhROR8BUbh+YKqvgX+Ft+H74YFSD40dZN1nl
Hi/sW3A8iiXe5BzFA7eiWwiRoza2+sBRW5yjGEoxjjJndXSk+WrQwSyrJV2N
IoN0uaPIIHKnkDvtaT4q3NHYfMgdXe7swFH85UAK/JZzScUcJVJi8pVi2KgU
K5blcS7yWXFYMW0vs+Bfo3fCS8vDGrA2Dk6IUr7MUUEw4aiQ7w/44YfEUSWr
QQezrJZ0NYoM0uWOIoPInULutKf5qHBHY/Mhd3S5M511cxSz01jmKDnmHDnK
5/fNxQQV5cPks3tsas+GRzeI6UiiKV6mCEraHr2Tfwo+bvOqOEdF+BQPTAX4
dcEUSvE5PomjNhGiOvhoEEctrAYdzLJa0tUoMkiXO4oMIncKudOe5qPCHY3N
h9zR6E6Ko8bDOOxchEvJuaQQXThKDTCrORYWxeT5HKKAhTxefMNyoYhYqVnF
5G+DwjmKfRbrcXjklRjp4hA18PgIFbtzL8TDKUKpkHPU+tWtmKMs4qjl1ayD
WaglXY0ig3S5o8ggcqeQO+1pPirc0dh8yB2N7shL6QmOGkr37skcFc3rMXRh
qS8FRzk4guQCAgELuaYNUOTExe6bOxd4m/gIfBzrgQoZTbkSR3ksYRQbjooG
owKZowLOUde2kxwFZVZHR5qvZh3MQi3pahQZpMsdRQaRO4XcaU/zUeGOxuZD
7mh0R+Io0JiVmKPG07mkwkgDFtqNHIWDUX7IVr6DF+FADGEtL6gKKoRqeeUM
pVzXR47iOaMYRPm+L+b1gKPg+ycc1bFY6RrEUcuoWQezUEu6GkUG6XJHkUHk
TiF32tN8VLijsfmQOxrdWZ6jbJdNskXBVCM5WH1xgpILVG5hrBRxVOVq1sEs
1JKuRpFButxRZBC5U8id9jQfFe5obD7kjkZ3RsvN69mO5/nBJCg9VRbGp0kZ
jly+IDLN61WvZh3MQi3pahQZpMsdRQaRO4XcaU/zUeGOxuZD7mh0J2KYheLM
2WCU4wHATN3fV25hOzGGrwCOclyf4swrVrMOZqGWdDWKDNLljiKDyJ1C7rSn
+ahwR2PzIXd0uTMZC1oo7wEOE4l06CXTFCcoUUzLwXv3KO9BlWrQwSyrJV2N
IoN0uaPIIHKnkDvtaT4q3NHYfMgdXe5Is2qL5OEEsLFsR6adEoBqGp8kjrL5
asWUh7NSNehgltWSrkaRQbrcUWQQuVPInfY0HxXuaGw+5I4ud3bgqLnrwuCy
eqZliRpmAtVkpCsbnLDMqgFrN0wTOIpP7dG6MNWpQQezrJZ0NYoM0uWOIoPI
nULutKf5qHBHY/Mhd3S5k0AgERCVZ51iPq8nc9Q8mlq0TAQc5bjReBStU1yZ
GnQwy2pJV6PIIF3uKDKI3CnkTnuajwp3NDYfckeXO1PwI92jF8dExWU4AnwS
JZ7XY8sH83m9TJWDT0KmZXOOisajgnh6keVAAI7yEe3CS5c3BEcxiOoTRy2l
Bh3MslrS1SgySJc7igwidwq5057mo8Idjc2H3NHiTpJ5snJGcY4aQUF8CvAx
YhgRH5VHhcEpzVEAUh6uR4OjT+EAXwbBkCeVYkNkgqM6AFHEUUurKQdzQi3p
ahQZpMsdRQaRO4XcaU/zUeGOxuZD7mhxJ81RqGmOGjCIYrHcbPoMOAroxWcc
BSTD7tcDvMnHUcvKMC3AKA5OoRvwECnGUTwtJ5YgSHBUhzhqaTXlYE6oJV2N
IoN0uaPIIHKnkDvtaT4q3NHYfMgdLe5MQdQ0R42mc0YJjvKDAXIUD+oOOUc5
8qdmyXa9tz84e+ztD+Vy4qMvYPuOBIX1GyzM3MNJPeQojycCjTkqRI66uH5t
Y6tHHFWWmnIwJ9SSrkaRQbrcUWQQuVPInfY0HxXuaGw+5I4Wd6Y4ajyLo4bx
bXphxFFBdHMckIwjcZT82YzRJNv5+PNv2NiWtOVvJz5+5z8/NVkGqnkEhQKO
AuhykaP8ACHK42vTMIiK4qOyOKpHHLW4mnIwJ9SSrkaRQbrcUWQQuVPInfY0
HxXuaGw+5I4WdzI5SjCMCDWXc0YJjuLJMNnKesY0R8maz1FihOrsuQuz2ElW
37T5KnuB6004CsPOcaU/vGXv0uUN5KjtrkkctbyacjAn1JKuRpFButxRZBC5
U8id9jQfFe5obD7kTvXuyOQyh6OGw9E0R4Vx0gPOUY5vGPasPkSW6bhnvrjA
FkLOtz2tft+ybJmjAkyoLjgK95A4qlw14mBO73ZLuhpFBulyR5FB5E4hd9rT
fFS4o7H5kDvVu5PmKFSao6I19SYcFWAkkj6OClwf8MkXHIVTe5kc1SGOWk6N
OJjTu92SrkaRQbrcUWQQuVPInfY0HxXuaGw+5E717sznqOFEoyjOfCByXUZj
QY7rO45nGDPn9SLTh8OzX158/d2PPvz0q0EWR7158szxE2eubHTn19Pv27bt
ArkBRznehKPYPCOPMxccJfJHEUctr0YczOndbklXo8ggXe4oMojcKeROe5qP
Cnc0Nh9yp3p38nHUSOYokTZKcBSAzY7jUabNSOm1d07PKqc+Od/pmyx6au6o
FBuPshyZozCwfJqjBsRR5aoRB3N6t1vS1SgySJc7igwidwq5057mo8Idjc2H
3KnenZwcFd2vJ6Xf5JmjwhI5CsuHZzNGq2TJHOUyfApwN1h8VIB5D0LiqNLV
iIM5vdst6WoUGaTLHUUGkTuF3GlP81HhjsbmQ+5U784UR6WSHuzIUTx5VMDn
9arjKMA2x43W1yvGUT3iqAXViIM5vdst6WoUGaTLHUUGkTuF3GlP81Hhjsbm
Q+5U705ZHGXOznuAEhyVSUrz/yqL5Y8ijqpcjTiY07vdkq5GkUG63FFkELlT
yJ32NB8V7mhsPuRO9e4sylFhUY5CAS+d+eJCJkdlbk8ri6MC4ijVasTBnN7t
lnQ1igzS5Y4ig8idQu60p/mocEdj8yF3qnenYo5yXP/t/zybOaMHHDWanX5T
iDhKixpxMKd3uyVdjSKDdLmjyCByp5A77Wk+KtzR2HzInerdqWxeryzRvJ4W
NeJgTu92S7oaRQbpckeRQeROIXfa03xUuKOx+ZA71btTGkeZVXGUQRylQY04
mNO73ZKuRpFButxRZBC5U8id9jQfFe5obD7kTvXuLJn3oGEcRXkPFlUjDub0
brekq1FkkC53FBlE7hRypz3NR4U7GpsPuVO9Owvn4awbR1EeTqVqxMGc3u2W
dDWKDNLljiKDyJ1C7rSn+ahwR2PzIXeqdycfRw3nc5Tr+lVyFGDbThxF68KU
rEYczOndbklXo8ggXe4oMojcKeROe5qPCnc0Nh9yp3p35nNUYmovDAfpW/Yw
pblp5lqneHkZhmU7HsAbW5g4SHBUSOsUK1IjDub0brekq1FkkC53FBlE7hRy
pz3NR4U7GpsPuVO9O2mOQpTK5Kg5S8MAR+XJWrCk4CtSHBUKjgqCwSyO2iaO
Wk6NOJjTu92SrkaRQbrcUWQQuVPInfY0HxXuaGw+5I4Wd0rhKMt2w3BmN1KW
4CtMtrgecVTVasrBnFBLuhpFBulyR5FB5E4hd9rTfFS4o7H5kDta3MnkqPHM
UPOMqT3XYxzluN6sbqQs2Y4LHAVfxO/Om3AUK0BQHKUSHMUm9YijllZTDuaE
WtLVKDJIlzuKDCJ3CrnTnuajwh2NzYfc0eLOFEftFGo+a0jKdjzDtD3fn9WT
LC+ovG9YAGyAbTFHhYKjIogKol3K4KgucdTiasrBnFBLuhpFBulyR5FB5E4h
d9rTfFS4o7H5kDta3CkUao4cNWtIyjRty3aCICwxVgqqggqhWqg8HoyKp/OQ
oPgAVIKj1q9sEkeVqKYczAm1pKtRZJAudxQZRO4Ucqc9zUeFOxqbD7mjxZ1Z
oebjXFN7cgKECKX6favXMzvdvijb3R6UrU53x4LvlD8LVUGFnNBchKiYowYT
jvKZD2E4THDUdo8HRxFHLa2mHMwJtaSrUWSQLncUGUTuFHKnPc1HhTsamw+5
o8udfBy1w5AU4I3rsQk+23YtC4DKMS3HAKwyrKiYUGwoPcNKFNzO3hC/2eCj
T1AJVAUVYmw5n9GLch0gR0X7wMejOEeFxFEq1KCDWVZLuhpFBulyR5FB5E4h
d9rTfFS4o7H5kDu63JkfIpVvSCrAISmW3tz1Gfmw4gH/WIBVNosPnxQ7VaS/
4vs5j3lYD1QoIMrzff5dgwlHMYgKWY7QmKNgY5KjesRRS6lBB7OslnQ1igzS
5Y4ig8idQu60p/mocEdj8yF3dLmTe2pPGpIKkwHnYlSKZRr3Ao/nOXddhlWM
rBwvZ8H3wwfh46wSTHEQzeVNBqNYYRA1CDlKcY4ayBy1ud0Hjtqe4ihzVkdH
mq8GHcyyWtLVKDJIlzuKDCJ3CrnTnuajwh2NzYfc0eXOjhyVHpJKze4lUCpw
EYGiEjIu4lsQk9IF/wpvgzfjp6Ia4oAoMeqFHBWEQ+CocFIijgoHA+Ko0tWg
g1lWS7oaRQbpckeRQeROIXfa03xUuKOx+ZA7utwZTWl+Qk55SCoxuzdBKUE7
fCgpFDQ1Kb5U5O34Tr6dDzrFaQ1SNTOOYsNQMkolOWoLOaqLHGUSRy2sBh3M
slrS1SgySJc7igwidwq5057mo8Idjc2H3NHoTpEhqUIoNaEpfwJU2cWPyUom
KAFRmN8g3oK35jF24rshARXnqMtXt4ijSlSzDmahlnQ1igzS5Y4ig8idQu60
p/mocEdj8yF3NLqTyVFzhqR2RKkUTU2PQc0oiY+IqrDmeOMgujuPQ9Qsjtog
jipPzTqYhVrS1SgySJc7igwidwq5057mo8Idjc2H3NHozpypvXE+lMpJUzlL
gqCmSnx3Xsi/Hf79kaPiPWE7M+GoLnKUSRy1jJp1MAu1pKtRZJAudxQZRO4U
cqc9zUeFOxqbD7mj150kR5WAUgMJh4riU5KgosqjmCj40hHnqAFylNiNwZDt
xjpyVJc4qhw17mBGtaSrUWSQLncUGUTuFHKnPc1HhTsamw+5o9ed+UNS451Q
SiRDyKKpwTQgzS/Jz2KdeEdeGMVEjThHyYr2IYujTOKoJdW4gxnVkq5GkUG6
3FFkELlTyJ32NB8V7mhsPuSOdndyDknNRakYe7JpqlgRVU2m7aKYKJ4OFPlp
OExwVIActZXkqE5v1fJwHjly5DoueAIvXdfdu3cvvFxbWxNvOHDgwPJf1MSD
edyarkaRQbrcUWQQuVPInfY0HxXuaGw+5I52dzKGpHKhVPk0lSCo6RKHl3OI
EhwV5VpHjroiOMpcVY4CWAJqAnbqdru7d+8+f/48bAFwgpfATrAdX5byXU08
mMet6WoUGaTLHUUGkTuF3GlP81HhjsbmQ+7UwZ1Zs3s5UUqmKXmmb0esSryN
R0BNilSzNIsXfzGnKPaGMMlRhuAogKgV4yiAJYFJOO4kc9Tly5eRpkr5roYe
zC3pahQZpMsdRQaRO4XcaU/zUeGOxuZD7tTBnTlDUjlQKpum4im5DKySwQkj
oBIfFBXG406DyejT9PcOBEeFq89ROIUn5u/gCVITzuu99dZb8BKAqqyva+jB
3JKuRpFButxRZBC5U8id9jQfFe5obD7kTh3cGedDqXE+mkoDVc4i1yAqFQgV
1Qz/xd8+EBw1EBzVExzV6Vtt4Cjx14MHD8KW22677cYbbzx//nyhmv8XEolE
IpFIS2i8EEpl0VQCh+ZhVfqdWbVNVxt/70BwVCg4alNwFCOoleOocda8Hj7H
2T0UQNS+ffvKmt0jkUgkEomUUzlRKvXOHPwzs8z+2HTNuDO4dSg4aiA4aiA4
CvFpJTkqHWcOG+Hx4MGDY05WxFEkEolEImlUNkrlGJjKAVS5lFmh2JkBhyjG
UVEmBOSogeAoERa1khw1TuU9kKkJ4GqxeT0SiUQikUhlKT9KZb1/EaaaVcN0
5eOh4KihzFEDwVGb2/2V5ygSiUQikUh1VibRLExTiylRLR+D4hyVirkijiKR
SCQSiVQ3zUMpiabSQJX12WLsNKlnPB7GE3nD4RiKxFEDmaNwnWLiKBKJRCKR
SDVRJuzMoqlMoFrwe6WCs3i8CI5ikjkK19cjjiKRSCQSiVQrzRo6mg9URbEq
8+PRDXpDmaNGcj7zxDrFxFEkEolEIpFqqLw0NQOoipXpCqX0CKMER00CpYij
SCQSiUQi1VtzIpt2Ljvx0owi3/Q34ah4O3EUiUQikUikJilPwPgSJakERw2n
thNHkUgkEolEaqRyAFUJSuThJI4ikUgkEom0YlJBUKmaiaNIJBKJRCKtvpYB
p9lVEUeRSCQSiUQiFRBxFIlEIjVdhw4d+td//dcwDHXvCInUOhFHNVqWZZmm
eerUqWvXrunelxK0Yj8Htba29uyzz0Jz0r0j5WgwGOjehTKF0aG696IEQdt5
6KGHCKVqq62tLfDo7bff9n1f976UoJXsqxcWcVSj9ac//enmm29+6qmnVqNt
rtjPARmGAT/nwoULunekBEG3cPz48V/84heO4+jel3J06dKlvXv3fvXVV7p3
pBytGEp9/fXX9957709+8pPt7W3d+7KsoMk8+OCDt99++zvvvLMa3L56ffUy
Io5qtD788MNdu3bBuaDb7erelxK0Yj/H87xHHnnkzjvvbO6JAH6C6PY///zz
xx57rNHdZsiFz23bBiZcX1/Xu0tlCahjz549cF6DxxVAqSAIDhw4cPr06T/+
8Y+7d+/e3NzUvUdLCc6mzz77LIDHc88913RrUCvWVy8p4qiGChojnAjAKTiv
/du//Zs4nhs67QI/xDCMlfk5Qo0eIoCdv/fee1988UVEqVOnTu3bt+/NN998
+OGHv/3tb+/fv991Xd37WExwLgM7oOHA816vB8/feOONZ5555oYbboCTQnOH
DYE6fvWrX509e3bc8EMOBdcdzz//PBAU/C44D/3pT39qNEo5jgPdGvyQra2t
++67D1EKT7K6d20RrdippxQRRzVRcBj/+te/fumll/DQhQMbjud77rnnr3/9
69NPP924/hP3/+DBgzjW0fSfA83n66+/PnHiBHYvjT6vwcnrrrvuQpQCavrd
734HEHXy5MlOp/Poo4+eP39e9w4WE1jw5JNPIkrBL3rnnXf27NkD7Qh+zuHD
h48cOaJ7BxcUWPPII498/vnn+BJcu/XWWxt6yI15/waH2f333w9tZ8wHcwCl
gECaOPQBXQGQxmeffYYvARHhhzz++OOHDh2CSxK9+7aAVuzUU5aIo5qoY8eO
vfzyy2N+GBuGAVbBk9deew3aJlzy6N67wvroo4/gBI1HHfwcnHxp7s8Bd/bv
3w9dzS233PL++++PY5R65plnGncFCqYALMFJWYxKoTY2Nvbt29fv9zXu22Iy
TfPnP/+5GJVCwfEG1AHHocYdW1LPPfec+FEXLlwA8Pjmm29079TiQpR64okn
8NoKGk6v19O9U4WFs5M4zgmsi+4ADULPBv1bE6fIV+zUU5aIo5ooOJjhYu1X
v/rVTTfd9N3vfvcXv/hFE5ukEJy/7r77buhwADzg58DVTRNP0CjoLX/zm9/A
VeelS5d++tOfwqPYDmdwvftWVNBDPvXUU3AuW1tbE6NSsP3dd98Fj+BCW/cO
FhZg7QMPPHDixAk42AR1XL16FTbC2aFxAcByJDaCx3333Xf8+PEHH3zw7bff
1r13hQWAARcgOJIGlx4JlGqigKN+wbV3797vcgFy6N6ppbRip56yRBzVRMGh
C+3x9ddfh1MzIMfPfvazJo54C8GhBie4l156Ca5ooOcBDmnchJEQ9pzwWwRE
ASVi4ErjBKdpOK9hPylP8MnR2g2S53nQ/+PgQGKCD/6ke+8KKx2JDU698sor
cMoG0G3cyCd0ZY888sinn34KXRn8LvhFCIfQmk6dOqV77xYX9GnPP/882ASH
3Mcff/zb3/5W9x4tpRU79ZQl4qimCKNT7rzzTrlXwRiPZ555pnExfvhz4NoT
dl6+j/7zzz9vYgDzmJ/XcLfX1ta+973v4Yze1atX9+3b19D79YCjfvzjH4v5
lA8++ODb3/72q6++qnevFhbA0sMPP/zhhx/iS+j/77jjjkcffbSJELUCkdjA
FcC0gvegW3vsscfEn+D5c889p2/vlhIOrN17773ymC0QyFNPPQWdg8YdW0z4
c3bt2vXnP/9ZjD4199SjQsRRjRA48uyzzx47dgyuaH74wx/iORocOnTo0OOP
P94U6oBfIebQoUnCtTOcwn79619Dn4ndKVzmwJmuKRc4cDkG//64t+DI9ddf
/0//9E/Q4ViWBT3M97///Ztuuunuu+9u4vwXCvpMuN588skncfTppZdeOnPm
TKOH8QEC77rrLuQNIHb4RXKUVIO0ApHYgILAfrDb2PY/+ugjgHYx9w28ceDA
Aa07uKCggUCHBhcdb775JvTV586dG8c3hx4/frwpc8fQ5MVdeABL8HMMw4Dj
DfwaN/DUo1rEUXXWiRMnAC3GfFbl97//PRzb0CofeeQRaJ5wpoZL0aa0ShQO
3V+9ehWeP/30019++SXgB5ypcW6lcTMReK/K3r17v/nmm3379l25cgVOar/4
xS/gFzUaNk6dOnXnnXfCWQx8gZMdXFYDDcLvgidNjFuTg4jQMkBcoPfbb7+9
0YHlKxCJDd2aQCk4I4NHv/nNb+AJvHzhhRcaFOIFx9Uf//hHnDKGLvrIkSPQ
oUHnhn01EDv01br3sZjW19ehT4MeGwM+4foXLjrwDtCVWQKgRBFH1VbIGHi9
OebXBdBzwpEM1wVnzpy58cYbodtp3OUAXKMBEMIB9vLLL8OJDCEKt//lL3/R
vXeFheflH/3oR/CIW+DnwIWnmDxqnODoAmSCcwGQBpym4efAafq999575ZVX
mpjGPB1EhHcgwrm7iRk4gQl37dp1/fXXv/vuu/BDmh6JDUcUHFc33HADolS3
2/3pT3/6ve9975Zbbnn22WebEoOHt2MAO+GVIJ49r127hnkAjh8//q1vfQv6
7WbNf8GveO6551599VV4Aj/krrvuQoiCl88//3wTZyeVijiqnkpAFAr6/8ce
ewwO5mPHjjXoUhoOp7Nnz+JZGMAPLnPghyBvYGTpa6+99vOf/7yhMyyIUvff
f7+YUjnCpXevFhOcpkUaJTg1wwkaUUr3fi2oFQgi4v1wNE5rmub+/fuvXLkC
lHvzzTfjCiPNjcQGdx544IEPPvgAgFae4INf1KDLwwRECYlVNYFGxE279Rf8
nE8++QSxfGtrC/pneMR7TB5//HHot//93//94MGDTUHcykQcVUNhQCyewsCL
F198EU9tOPR90003wVVbg85u0P9DP/n973//rbfegqMKCPDAgQPQEvHWjyef
fPIvf/lLE8c6oIcB8MAMKiKvb7/f/+Uvf9nQJdugw7z77rvhZI0nBUQp4N4m
RmKPVyKICCBQoOw333wDLQg6BGgvhw4duvXWW+F66vLlyw2dZAHSEKO48gSf
3r0qKjDllltueemll5Bp4Xrwyy+/HHNK/NGPfgR9dbOyoQLTws/ZtWvXxx9/
DL/o1VdfBQ6EJ9A/v/DCC9BXwxHY0MFPpSKOqqdwuAZ4CTpMuSXCEzhTN6hh
ot5//304nUFXCWexCxcuAEc1fWT4008/hRMZ9JMYho0oBS8fe+yxixcv6t67
xZU4o0GfmRgUbZaaHkSUHhWE5oMz4ydOnLjtttuAqRrKUYnAcvgh0KCaOLCG
w4NIvHgHECoIAuirG0eGcM3+4IMP3nHHHcCE0JU98sgjDb0qrFLEUbUVohSc
1ERw7wcffABdaFMaJhxF0CviDXqAGchOL774IvQ50EL37t3buLyUsl5++eXP
P/8cPRIoBZdsjbs7D2x65ZVXrr/++rvvvhtvAWju4MA46+c0PYgogVKYHwDg
9umnn7527ZruvSssMAWXTMLRdfQFnkMj2t7ebigTAkp9//vfR74d8+4Orn8b
dKkIOwwEiJMC0C3/7Gc/g87t4MGD0FfD8/379zfuyr1iEUfVWXiaxi4UIAqe
NygTETS9P//5z9ASgZ2gq4RLG2iS0EiBrICjvvWtbx0/flz3Pi4iOJH96Ec/
El7IKKV71/IKb7rB52fPnn3qqac8zwNwuvPOOwVKwTmuKev27vhzmhtEhPd5
ySiFWAjNB+eSdO9gMUEncM8998D+gzWXLl0CmoK2c9NNN0EvAVjYrEjshHBU
CkwBy/6Nq0EdAnAsUlMi9AL8uu+++7773e82NJNwZSKOqrnwNL1r165mQZQQ
UtMdd9zx8ccfv8Q15kfd+vp6g6JJhfB2tjNnzuzdu1d0lbh2Z1NGomCfYW/F
ZPHf/vY36C3xVlDoS+EEB31mgyKIVuznyIK2c/fdd+NU0QqE/WNeNfg5eLvu
XXfdBSgFpxl4bG6UlyxEqd27dzcLooSQmkDQlT3zzDM4ngYGwfVUE39OlSKO
qr+g54SG2USIQsHhBBAFKPXjH/8YOpnmhg9B9/K73/3ulVdeGfMcvzJKNUu4
brIcdwc/CrpNaPO//e1v4dyNsbJN0Yr9nHE8O/nAAw+88MILt956q4xSP/vZ
z5oY9g9ePP300zfddBPeaCyjlO5dK1NwpIFlTewTUGDTW2+9BTQIDer+++9v
Yr44LSKO0qtvuMbxlPquXbswZYfu/SpfcBZ48cUXr7/++oMHD+relwWFt7MB
O+EsEqIUuNaUOCJA8ccffxyBPMEe8AT6TzipgTtNmV5xXRd2G4cBV+DnyII9
f/jhhw3DGPO86zJKNffUlhhSg17u+PHjTUFc2NvPPvtsY2NjzC9sDxw4kFii
a5XkOA40nEYvAlWxiKP0CrpH6CShq4TLNOj84Qk0zyZGPuQUnO+aGO771Vdf
4dxQIgYbznQNGicExnjuuefuu+++NErB6exmrqac18a873rjjTegvaRRqok/
R9b58+cfffRRkQwEjrcbbrhBvhesQYJfsba2dvr0aeDe5s5OwsEG3fJdd911
9erV11577fDhwx988IHg25UUdG7NHVirWMRR2oUodejQIRzxhnYKrbVxKCUW
PoCuEn7Ip59+2pRRmh01GAyeffZZTA81bvjtbHNQSveuLaI5KKV715YSYMb9
99//4osvwg+E3/L73//+3XffBdfE8pRN0YULF+CHPP/88w8++CDO4jV3dlKg
1B/+8AecjpSHChukFe6rdYk4qg7CVW6hq8SXiFLHjh3Tu1f5hTuMEaTQ5//k
Jz+5/fbb4Xzd9NOZkJxpc9y029mERnyJ9nu5Eij1zDPPNLEv/eSTTx544IE9
e/YkUKqhP+fy5csHDx587bXXcEjtlltugV/38MMP/+Y3vwHqeOyxx+DErXsf
CwguQACZzpw5M46ToAJN4ahUQ2cnEaVuuukmYQQ8ue22206fPq13x/Jr5ftq
LSKO0iXoJ19++eWnn34aTm1jaYIP/9q4+S+8NDt+/Pizzz7rOA6co+FM3dDm
KQa0MWEXPofH3/3ud3Bea+jNX2Pu0SOPPGLbdmJUCk5tTczlde3aNTgvb2xs
JEalGvpzwBdwB07T99xzD96/AO0Iftd7770HXQH8zH379jULP8AIXPgJX0Kf
Bmft8+fP692rBbS2tva3v/3tV7/6FbQgeYIP/9q4+a9V6qtrIuIoXYJrT7iQ
efLJJ8WFcwKlGifYc7iCht4ex40b2jyht7///vtxbigxTwSngF27dsEldoPG
OsAFDFce89MBcPsoThV48ODBe++9t0HxXWN+aoaGg8/BDji14eUG/Ki//vWv
0Hyakn0C5XmeuGcBoP35558fp24Fxdtdf/zjHzcx1guaP7QgjIaCU/b+/fub
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
5ubW19d3d3ebxaJtlJpfODadGwt0RrZ9+3bzdPmjR4+ysrLsbCi90AAXaOn8
U3xSx6LPZffu3TonVZvXGWicXZVSd+ru/Qgvp6uj038N2eY+vlmRjCgVOJ0M
VlZWxkzs1KeTk5OjZqb4pM9I51muzGJVc7KHhvpq+xi1hpvi4uILFy4EWrr4
R45aQfp/O3/+/Mcff7xv3z6lqQ0bNmzatGnHjh06C0hNTXX3iWZvlFLPs2XL
lrq6ujNnzuzcudPd+YrKhJmZmXaJbH069lTUFSpta2vrt99+W1ZW9mY+93at
rlC4/eMf/3jgwIE3J127WJ35hQ0BFZx0pGzevLmtrU21IEqtB0q2u3btMhdn
zDN6Oo1SA9PJr86CP/3003PnzrkyV2FqakpDjLKTuWGnU/iSkhJbePXY7t41
cAU5amWZKGWOULN4rIY5tfCMjAyH9uhUOe1eFYY3SqlSJ06c0KAwPT0dXBnf
w70F8z/NicrKytIJmupodmdTfGpubnYxE6qBqeTJyclubcS2hJ6eHuUNHSlB
F2RlaHS268UNDQ2p4ZllD9U5dHV1udIbxCUzZ1WnUUVFRTrb1TlvUlKS8q1z
t72UlxSivDM81eq8Qf3y5csakgItY/wjR604b5QKuiw+9ff3f/zxx7/97W81
Rquf+eqrr6LRaG9vr41SbrFLnqrw6jz1Ijs72+wNrdNSjWg3btxw8fFJ8/h/
TU2NW4spLaGvr+/kyZNxs5LGwMDA3r177enGd999t2fPHnfXi4szSiDqEK5d
u6aIa6526oT34sWLQZfr/XgX1fG+mZmZuW3btr0LnJtM4hxy1GpwPUr9uLCb
rcKG+hl1LDpOt27d+uGHH27cuHHLli1vPri9/pko1dTUZHKg2RvaRKmgi+bT
gwcPzLrxOlDtupTqMB0NVFNTU+r8f3x9G3p9GbMGuFvGx8c1ltlMqFjF01Lr
lpqZ+odwOBx0Qd7Ps2fP8vLymhaox1YvvWHDhsbGRiWrnp4eNTluH68BctQq
sVHK0e3MTJTyXuhQ/9/X1+fu2iMazjZt2vTtt9+aL02Ucu7001BdQqGQ3X/H
RKmkpKT09HQXLxiqjRUXF6vkNjKZ9Q+loaHB3Rw1/9N8QnUF0Wh0//79zg3T
CUJH0KVLl3RMudi5DQ8P19XV1dTUqHNTrBoaGlKyYlnXtUSOWj36b9Rg7e7p
wJtRyjmjo6PqT9rb2//0pz/Nv7Gn4dTUlCtTSb1mZmYOHTr06NEjNS2db96+
fduskj0xMeHi3Uk5c+aMmTikZNjd3W1uhKkuZnuOoEu3XP39/Xv37tUpVU9P
TxxUJ/7ogCorK1PKtTtQOE1trLq6Wt1C0AVJIOQoLMH1KHXr1q2UlJSKigr7
qJfr20PPL0yRPXjwYGpqanJyclZWVnp6ururTxjffPON6qIabd26NTc3d+fO
nc5dFtCREolE7t+/X19f78rzF4g/aoc6Z3R0vwx3kaOwNBOlKisrXXzqPBqN
hkKhzMzM69ev2zfd3R7aXqKZnZ3t6ekZHx+fX8iKtbW1QRfND1XHPGz+48Km
jWa67+TkZFlZmamaQ/SJKK6zTR4C9OzZs+IFjk4mcRc5CnEvEonYKPX8+XNH
760o/qWnpycnJzc3N9tM++TJE517urg0mVlGfu/evdnZ2Xb3DaWR48ePO7RC
iKXu8sSJE2axOOcupiFumL2wgy5FwiFHIW48fPhw+/btdocsL0WpjIyMUCjk
1vYidhUv5aWDBw9OTk4+ePAgNTXVRCl9WVVVtWh91yf9z5vIZ6d4TUxM7Nmz
x0Rc9ThtbW3nz593biCwz07a/W1VU31A3FsBEgE5CnHD3IJUXlo0WoyMjITD
YYfmrij7KWOYpTMeP358584dDc2NjY2dnZ35+fmHDx9WZV3Zt8JQ2FCO1e9m
Zu+NGzdKS0tNiFJi1AcUdAH9iHl20kSp3NzcwsJCfUDBlg3AGiBHIZ4sHaUc
4g1RVm9vb1NT0/xPU7y+//77gErn34ULF5qbm/Ux6cVHH330zTffzC9cpzp4
8OD9+/eDLt17W/TZSbPAo10OC0B8I0chbphtXwoLC+vq6pyOUvfu3cvMzDTr
nepg7OrqMoFKo3NRUZHSlELU06dPgy7mu1JMamlpMVdsJicnQ6GQIpO5trZ5
82bFRe/m126Jv2cnAbwvchTihmKGBjXz/JfTV6VUBQ3HGpeVN86fP19VVWVm
2pigmJ2d3d3dHXQZ34NCYE5OzqZNm06dOjU7O6vIVFNTY+5IKmKNjY05vcR3
fDw7CcA3chTiRjgcLi8vNwO02vCJEydSUlKcjlIbN25UMrTTlRWrHJ1E1NHR
UVpaGgqFFA4VNvbv3+/iuuvW3bt3VRGzPL69eefus5MAloMchbjx6NEje4dI
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
    "], {{0, 478.}, {792., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{792., 478.},
  PlotRange->{{0, 792.}, {0, 478.}}]], "Input",
 CellChangeTimes->{{3.8333804553149247`*^9, 
  3.8333804689999437`*^9}},ExpressionUUID->"3bf32f25-c4cb-47c4-aab1-\
af1435e51c5d"],

Cell[BoxData[
 RowBox[{"Ta", " ", "statistika", " ", "prikazuje", " ", "dele\[ZHacek]", " ",
   "oseb", " ", "s", " ", "prekomerno", " ", "telesno", " ", "te\[ZHacek]o", 
  " ", "v", " ", "Angliji", " ", "leta", " ", "2019", " ", "po", " ", "spolu",
   " ", "in", " ", 
  RowBox[{"regiji", ".", " ", "V"}], " ", "leto\[SHacek]njem", " ", "letu", 
  " ", "je", " ", "imelo", " ", "76", " ", "odstotkov", " ", "mo\[SHacek]kih",
   " ", "in", " ", "61", " ", "odstotkov", " ", "\[ZHacek]ensk", " ", "na", 
  " ", "severovzhodu", " ", "Anglije", " ", "prekomerno", " ", "telesno", " ", 
  RowBox[{"te\[ZHacek]o", "."}]}]], "Text", "Input",
 CellChangeTimes->{{3.8333767036462555`*^9, 3.833376704161256*^9}, 
   3.833380495214981*^9, 3.8333811622009144`*^9, {3.833388118995943*^9, 
   3.833388200852625*^9}},ExpressionUUID->"7e6fb79f-3d45-4bba-bb9e-\
a569de4a264c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   StyleBox[
    RowBox[{
    "Statistika", " ", "otrok", " ", "in", " ", "mladostnikov", " ", "s", " ",
      "prehranjevalnimi", " ", "motnjami"}], "Section"], 
   "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
      "42", "%", " ", "deklet", " ", "od", " ", "1.", " ", "do", " ", "3.", 
       " ", "razreda", " ", "\[ZHacek]eli", " ", "biti", " ", 
       RowBox[{"vitkej\[SHacek]ih", ".", "\n", "81"}], "%", " ", "10"}], "-", 
      RowBox[{"letnih", " ", "otrok", " ", "se", " ", "boji", " ", 
       RowBox[{"debelosti", ".", "\n", "46"}], "%", "  ", "starih", " ", "od",
        " ", "9", " ", "do", " ", "11", " ", "let", " ", "je", " ", 
       "v\[CHacek]asih", " ", "ali", " ", "zelo", " ", "pogosto", " ", "na", 
       " ", 
       RowBox[{"dietah", ".", "\n", "35"}]}]}], "\[Dash]", 
     RowBox[{
     "57", "%", " ", "mladostnic", " ", "se", " ", "ukvarja", " ", "z", " ", 
      "dietami"}], ",", "postenjem", ",", "bruhanjem", ",", 
     RowBox[{"dietnimi", " ", "tabletami", " ", "ali", " ", 
      RowBox[{"odvajali", ".", "\n", "V"}], " ", "raziskavi", " ", 
      "univerzitetnega", " ", "kampusa", " ", "je", " ", "91", "%", " ", 
      "\[ZHacek]ensk", " ", "priznalo"}], ",", 
     RowBox[{
     "da", " ", "svojo", " ", "te\[ZHacek]o", " ", "nadzorujejo", " ", "z", 
      " ", 
      RowBox[{"dieto", ".", "\[IndentingNewLine]"}]}]}], "Text"]}]}]], "Input",\
ExpressionUUID->"79e7d9a7-be14-4fcb-a3d2-a7d2fba99e29"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8333758771900983`*^9, 
  3.8333758775000987`*^9}},ExpressionUUID->"080480db-7c97-474a-98e7-\
4638dfef62db"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prihodnost", "Section",
 CellChangeTimes->{{3.8333807877603903`*^9, 3.833380790935395*^9}, 
   3.833380886325528*^9},ExpressionUUID->"2fffd83a-ed3f-4f18-8d1a-\
e4a4edb0051d"],

Cell["\<\
Glede na statistiko podatkov, moje mnenje je da bo vedno ve\[CHacek] primerov \
z anoreksijo, \[SHacek]e posebaj pri mladih. Mladi ve\[CHacek] gledajo kako \
izgledajo, pazijo kaj jejo in so vedno ve\[CHacek] samokriti\[CHacek]ni.\
\>", "Text",
 CellChangeTimes->{{3.833380893805539*^9, 3.833380898425545*^9}, {
  3.833381033645735*^9, 
  3.8333811321608725`*^9}},ExpressionUUID->"ee56a06a-03d3-4645-abf9-\
1106454a0fc4"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8333586899744034`*^9, 3.8333587950494137`*^9}, {
   3.833359086365076*^9, 3.833359100634892*^9}, 
   3.833359267275423*^9},ExpressionUUID->"20bd244b-fc42-4fff-9175-\
e97678a48953"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8333591325397167`*^9, 3.8333591340998063`*^9}, 
   3.8333592092611055`*^9},ExpressionUUID->"084f6ed9-8c6a-44b7-9119-\
c3a6e0007883"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8333588081871653`*^9, 3.8333588089352083`*^9}, {
  3.8333591794484*^9, 
  3.8333592062729344`*^9}},ExpressionUUID->"afee41b8-fe4a-4c8b-8a8b-\
662352fcab60"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.83335890933395*^9, 
  3.833358914676256*^9}},ExpressionUUID->"520bcf64-9350-40c5-b4fe-\
a4ad53c4c879"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8332819090073767`*^9, 3.8332819491274333`*^9}, {
   3.833358359433498*^9, 3.833358368180998*^9}, 
   3.8333585373206725`*^9},ExpressionUUID->"ff968b7b-d20d-4342-a9ea-\
7ac35fcb48a7"],

Cell[BoxData["\t"], "Input",
 CellChangeTimes->{{3.8332810566461835`*^9, 3.833281059736188*^9}, 
   3.833281581091918*^9},ExpressionUUID->"5beb6828-ca44-4868-b03d-\
14c767a69b98"],

Cell["", "Text",
 CellChangeTimes->{{3.833279300556718*^9, 3.833279327858763*^9}, {
  3.833280998446102*^9, 
  3.8332810006711054`*^9}},ExpressionUUID->"3a84a2f6-d3a4-4e08-a5ad-\
6188f81a16bb"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833276513501808*^9, 
  3.8332765176010427`*^9}},ExpressionUUID->"62f1a9bc-351a-4fb5-a06d-\
f7e22742f0e9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8332764693042803`*^9, 
  3.833276470400343*^9}},ExpressionUUID->"74752d17-ab91-43fc-9eaa-\
6921707ae1eb"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.83327641439314*^9, 
  3.833276419912455*^9}},ExpressionUUID->"92d83dca-3121-4405-9f21-\
ec08f606c043"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833275919230818*^9, 
  3.8332759192328176`*^9}},ExpressionUUID->"bc8909ab-9971-44c4-8585-\
93f6d15a6247"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8332756077740035`*^9, 
  3.833275607779004*^9}},ExpressionUUID->"96dd95fb-c513-4320-8cbf-\
7c63f202f227"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8332751024130983`*^9, 
  3.833275196371473*^9}},ExpressionUUID->"2c058f66-06bb-49bd-b54c-\
e3f8a62197f7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833275204100915*^9, 
  3.8332752072610955`*^9}},ExpressionUUID->"23a7980c-0023-42cf-9279-\
bec7f9a37156"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8332747942704735`*^9, 3.8332748315216045`*^9}, {
  3.8332750307319984`*^9, 
  3.8332750594236393`*^9}},ExpressionUUID->"5e60b7ff-6520-4e73-a7cd-\
5a7d7cc7507f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 670},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"529e1b9f-eb55-4287-8ae9-c4b2b921e3b7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 359, 8, 131, "Title",ExpressionUUID->"2148a03e-7e65-4361-aebe-2ef7952e341f"],
Cell[CellGroupData[{
Cell[964, 34, 451, 8, 28, "Input",ExpressionUUID->"7398d997-50b6-487e-a1b9-5ae516bafd91"],
Cell[1418, 44, 90254, 1805, 557, "Output",ExpressionUUID->"a04b1b67-1ec7-4cc1-bd55-e0f415f90c02"]
}, Open  ]],
Cell[91687, 1852, 205, 4, 28, "Input",ExpressionUUID->"e8b42d0f-80de-4b1e-9191-4bfa7d00e409"],
Cell[91895, 1858, 354, 8, 88, "Input",ExpressionUUID->"f3d809f0-9c1d-4ac8-b476-a4640553dc1b"],
Cell[92252, 1868, 771, 14, 56, "Text",ExpressionUUID->"fcd7875d-1f93-487a-ba2e-f4c09b853a04"],
Cell[CellGroupData[{
Cell[93048, 1886, 515, 11, 28, "Input",ExpressionUUID->"3679bd2a-f203-42a3-a070-539405659d74"],
Cell[93566, 1899, 172, 2, 32, "Output",ExpressionUUID->"277fc013-4acc-43c4-9333-6b555318d56d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93775, 1906, 456, 10, 28, "Input",ExpressionUUID->"6cbe46db-6092-40bc-b783-c3d503ff0e98"],
Cell[94234, 1918, 152, 2, 32, "Output",ExpressionUUID->"bfba1f4a-f82d-4592-a170-d15fefb24c47"]
}, Open  ]],
Cell[94401, 1923, 456, 10, 28, "Input",ExpressionUUID->"e6b86fbe-cd08-484b-8f26-bf73ed8af601"],
Cell[94860, 1935, 162, 3, 28, "Text",ExpressionUUID->"5cda69b6-7490-4ad9-8402-8ef17260d2e5"],
Cell[95025, 1940, 545, 11, 56, "Text",ExpressionUUID->"5db49c31-8927-4e4c-80c9-0c5331082fb0"],
Cell[95573, 1953, 130, 3, 28, "Input",ExpressionUUID->"2d442651-17d5-413f-9318-215cafa10099"],
Cell[95706, 1958, 151, 3, 28, "Input",ExpressionUUID->"143a0dfe-c0e2-400a-b9a8-6a7c5aa72f6e"],
Cell[95860, 1963, 154, 3, 28, "Input",ExpressionUUID->"a4f843d8-6095-47cd-a7ac-857dbdf375ac"],
Cell[CellGroupData[{
Cell[96039, 1970, 249, 4, 105, "Section",ExpressionUUID->"3b8f35da-2d12-45cb-a141-f33e4fdd0517"],
Cell[96291, 1976, 899, 17, 28, "Input",ExpressionUUID->"de5163d4-532e-4732-963d-0b8ed63d478d"],
Cell[97193, 1995, 90115, 1817, 553, "Text",ExpressionUUID->"4e677052-c8da-4fe7-90c7-047467c5d3c0"],
Cell[187311, 3814, 360, 8, 56, "Text",ExpressionUUID->"cf18ac82-143c-4d0d-adab-2fb6229206d2"],
Cell[187674, 3824, 245, 6, 49, "Input",ExpressionUUID->"f02a22c5-ce06-4447-958f-dbc3378fb9f9"],
Cell[187922, 3832, 10195, 180, 256, "Input",ExpressionUUID->"d6e9b393-1629-4e03-b077-7ea5e01d5996"],
Cell[198120, 4014, 225, 4, 28, "Input",ExpressionUUID->"ab69309b-7262-40c3-8698-c20e6c56e8c1"],
Cell[198348, 4020, 195, 4, 34, "Text",ExpressionUUID->"9edf7490-3eaf-4761-92dc-4f0dea1ab6cb"],
Cell[198546, 4026, 577, 12, 48, "Input",ExpressionUUID->"a7cd8d24-8885-45f7-8a75-263e06e47d49"],
Cell[199126, 4040, 33158, 614, 195, "Input",ExpressionUUID->"99d60779-40f9-4f47-894a-d53a42b82e3a"],
Cell[232287, 4656, 152, 3, 28, "Input",ExpressionUUID->"270cf339-685d-473b-96c1-7ef78df14efa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232476, 4664, 274, 6, 67, "Section",ExpressionUUID->"2698c620-ca99-4369-b7e7-909da9cef773"],
Cell[232753, 4672, 44254, 730, 514, "Input",ExpressionUUID->"cc844741-28ae-408b-b26c-20b4c9df7385"],
Cell[277010, 5404, 154, 3, 28, "Input",ExpressionUUID->"f7893295-85be-402f-9730-d7c1fe71cca0"],
Cell[277167, 5409, 1207, 24, 77, "Input",ExpressionUUID->"e1e14c5b-6b36-4e2e-8ea4-591e0d2d444c"],
Cell[278377, 5435, 156, 3, 28, "Input",ExpressionUUID->"155feba1-8229-4c6d-b41e-503d0c7380b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278570, 5443, 228, 5, 67, "Section",ExpressionUUID->"50a40118-cd4e-48f0-a832-b49a5fb2ba6a"],
Cell[278801, 5450, 48379, 798, 491, "Input",ExpressionUUID->"3bf32f25-c4cb-47c4-aab1-af1435e51c5d"],
Cell[327183, 6250, 860, 13, 48, "Text",ExpressionUUID->"7e6fb79f-3d45-4bba-bb9e-a569de4a264c"],
Cell[328046, 6265, 1532, 32, 177, "Input",ExpressionUUID->"79e7d9a7-be14-4fcb-a3d2-a7d2fba99e29"],
Cell[329581, 6299, 156, 3, 28, "Input",ExpressionUUID->"080480db-7c97-474a-98e7-4638dfef62db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329774, 6307, 180, 3, 67, "Section",ExpressionUUID->"2fffd83a-ed3f-4f18-8d1a-e4a4edb0051d"],
Cell[329957, 6312, 431, 8, 34, "Text",ExpressionUUID->"ee56a06a-03d3-4645-abf9-1106454a0fc4"],
Cell[330391, 6322, 229, 4, 28, "Input",ExpressionUUID->"20bd244b-fc42-4fff-9175-e97678a48953"],
Cell[330623, 6328, 181, 3, 28, "Input",ExpressionUUID->"084f6ed9-8c6a-44b7-9119-c3a6e0007883"],
Cell[330807, 6333, 205, 4, 28, "Input",ExpressionUUID->"afee41b8-fe4a-4c8b-8a8b-662352fcab60"],
Cell[331015, 6339, 151, 3, 28, "Input",ExpressionUUID->"520bcf64-9350-40c5-b4fe-a4ad53c4c879"],
Cell[331169, 6344, 231, 4, 28, "Input",ExpressionUUID->"ff968b7b-d20d-4342-a9ea-7ac35fcb48a7"],
Cell[331403, 6350, 179, 3, 28, "Input",ExpressionUUID->"5beb6828-ca44-4868-b03d-14c767a69b98"],
Cell[331585, 6355, 193, 4, 34, "Text",ExpressionUUID->"3a84a2f6-d3a4-4e08-a5ad-6188f81a16bb"],
Cell[331781, 6361, 154, 3, 28, "Input",ExpressionUUID->"62f1a9bc-351a-4fb5-a06d-f7e22742f0e9"],
Cell[331938, 6366, 154, 3, 28, "Input",ExpressionUUID->"74752d17-ab91-43fc-9eaa-6921707ae1eb"],
Cell[332095, 6371, 151, 3, 28, "Input",ExpressionUUID->"92d83dca-3121-4405-9f21-ec08f606c043"],
Cell[332249, 6376, 154, 3, 28, "Input",ExpressionUUID->"bc8909ab-9971-44c4-8585-93f6d15a6247"],
Cell[332406, 6381, 154, 3, 28, "Input",ExpressionUUID->"96dd95fb-c513-4320-8cbf-7c63f202f227"],
Cell[332563, 6386, 154, 3, 28, "Input",ExpressionUUID->"2c058f66-06bb-49bd-b54c-e3f8a62197f7"],
Cell[332720, 6391, 154, 3, 28, "Input",ExpressionUUID->"23a7980c-0023-42cf-9279-bec7f9a37156"],
Cell[332877, 6396, 209, 4, 28, "Input",ExpressionUUID->"5e60b7ff-6520-4e73-a7cd-5a7d7cc7507f"]
}, Open  ]]
}, Open  ]]
}
]
*)

